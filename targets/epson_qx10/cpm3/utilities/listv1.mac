	title 'MML: utility LIST'

;--------------------------------------------------------------------------
;     DP-L VERSION to LIST on console TELETYPE
;     28 april 1981
;	Version: General CP/M Plus system
;
; Amendments
; ----------
; 25aug81	Printer parameters held in data block starting 0104h
; 15sept81	BIOS jumps amended for upgrade from BIOS 5 to BIOS 9
; 14may82	Masks parity bit on testing for <return> & <line feed>
; 12jan84	Adapted from DSC4 CP/M 2.2 version
; 17may84	Dates corrected and file date added Check sum option added
; 12jun84	Heading underlined
;--------------------------------------------------------------------------
CIN	EQU	1	; BDOS I/O for READ from CONSOLE
COUT	EQU	2	; BDOS I/O for WRITE to CONSOLE
CMSG    EQU     9       ; BDOS I/O to write string to CONSOLE
LOUT	EQU	5	; BDOS I/O for WRITE to LIST DEVICE
CSTAT	EQU	11	; BDOS test for character ready
;
	cseg
;PROGRAM TO READ FILE AND PRINT ON LIST DEVICE
	JMP     PRINT
;---------------------------------------------------------------------------;
; Printer parameters (may be changed by SETLIST)                            ;
;---------------------------------------------------------------------------;
WIDTH:	db	80 	; WIDTH of page = 80 characters
PAGELN:	db	66      ; Length of page is default 66, print 60 lines
MISS:	db	6	; No of lines skipped at bottom of page
NUMBER:	db	0	; Set to zero to suppress line numbers
FORMFEED:
	db	not 0	; Set to zero if printer does not support form feed
CHKSUM:	db	0	; Set to zero to supress check sum display
;---------------------------------------------------------------------------;

CRWT:	db	'COPYRIGHT D. POWYS-LYBBE MML 12th January 1984'
PAGE$L:	ds	1;      PAGELN
LEN:	ds	1;      PAGELN-MISS
LINEF:	db	'    0'  ; Default first line to be printed
LINEL:	db	'99999'  ; Default last line to be printed
SKIP:	db	0	; When Skip is non-zero then do not print
;
FFCC	EQU	0CH	; Form Feed control character
LFCC	EQU	0AH	; Line Feed control character
CRCC	EQU	0DH	; Carriage Return control character
;
PRINT:
	mvi	c,12	; BDOS Return Version number
	call	bdos
	cpi	031h
	jnz	notcpm3
	mov	a,b
	ora	a
	jz	cpm31
notcpm3:
	lxi	d,use31
	mvi	c,9	; BDOS Print String
	jmp	bdos	; and exit
use31:	db	crcc,lfcc,'MML:LIST Must use CP/M Plus V3.1','$'
;-------------------;
; use our own stack ;
;-------------------;
cpm31:	lhld	bdos+1
	sphl		; SET UP OURS
;-------------------------;
; Set up print parameters ;
;-------------------------;
	lda	MISS
	mov	b,a
	lda	PAGELN
	sta	PAGE$L
	sub	b
	JC      MSSG7
	JZ      MSSG7
	sta	LEN
;
	LXI     H,DMA
	MOV     A,M
	ORA     A
	MOV     C,A
	JZ      NOMSG   ; No message passedfrom CP/M
	JM	NOMSG
	INR	C
	MVI	A,' '
MSSG2:	INX	H	; Skip leading spaces
	DCR	C
	JZ	NOMSG
	CMP	M
	JZ	MSSG2
MSSG3:	INX	H	; SKip file name
	DCR	C
	JZ	NOOPT
	CMP	M
	JNZ	MSSG3
MSSG4:	INX	H	; Skip leading spaces
	DCR	C
	JZ	NOOPT
	CMP	M
	JZ	MSSG4
	MOV     A,C     ; Check option <= 6 characters
	CPI     7
	JNC     MSSG7
	MOV     A,M
	DCR     C
	JZ      MSSG7
;
	CPI     'S'     ; Select start number
	JZ      START
	CPI     'L'     ; Select lines per page
	JZ      LINES
	CPI     'F'     ; Finish line number
	JZ      LAST
MSSG7:  LXI     D,OPTERR
	MVI     C,CMSG
	CALL    BDOS
	JMP     RETURN
OPTERR:	db	'Illegal option',CRCC,LFCC,'$'
;
NOMSG:	LXI	D,NOMSSG
	MVI	C,CMSG
	CALL	BDOS
	JMP	RETURN
NOMSSG:	db	'No file name entered',CRCC,LFCC,'$'
;
START:  LXI     D,LINEF
STRT1:
	MVI     B,0
	DAD     B       ; H,L moved to end of option
	XCHG	    	; Line count set to '     '

	MVI     B,5
STRT2:  mvi     M,' '
	INX     H
	DCR     B
	JNZ     STRT2
STRT3:
	DCX     H       ; Line number copied into LINE?
	LDAX    D       ; Starting with rightmost digit
	DCX     D
	CPI     '0'
	JC      MSSG7     ; Character must be numeric
	CPI     '9'+1
	JNC     MSSG7
	MOV     M,A
	DCR     C
	JNZ     STRT3
	JMP     NOOPT
;
LAST:   LXI     D,LINEL
	JMP     STRT1
;
LINES:  SUB     A
LINES1: MOV     B,A
	RLC
	RLC
	ADD     B
	RLC	   ;  Multiply by ten
	MOV     B,A
	DCX     H
	MOV     A,M
	SBI     '0'
	JC      MSSG7
	ADD     B
	DCR     C
	JNZ     LINES1
	JMP     NOOPT
;
NOOPT:	LXI	D,DMA
	MVI	C,26
	CALL	BDOS	;SET DMA ADDRESS
	LXI	D,FCB
	MVI	C,15
	CALL	BDOS	;OPEN FILE
	CPI	255
	JNZ	pr01
	LXI	D,NOTFOUND
	MVI	C,9
	CALL	BDOS
	JMP	RETURN	;FILE NOT FOUND
;---------------------------------
;Add user/drive number to filename
;---------------------------------
pr01:
	lda	fcb	; Drive no +1
	dcr	a
	cpi	-1	; test for default
	mvi	c,25
	cz	bdos	; -yes- find defualt drive
	adi	'A'
	sta	headisk
;
	mvi	e,0ffh
	mvi	c,32
	call	bdos	; find user number
	mov	b,a
	lxi	h,headuser
	mvi	m,' '
	inx	h
	mvi	m,' '
	inr	b
pr04:	dcr	b
	jz	pr07
	mov	a,m
	cpi	' '
	jnz	pr05
	mvi	m,'0'
	jmp	pr04
pr05:	inr	m
	cpi	'9'
	jc	pr04
	mvi	a,'0'
	mov	m,a
	dcx	h
	cmp	m
	jnc	pr06
	mov	m,a
pr06:	inr	m
	inx	h
	jmp	pr04
;---------------------;
; test for date stamp ;
;---------------------;
pr07:	lxi	h,0
	shld	todcre
	shld	todupd
	shld	todacc

	lda	headisk
	sbi	'A'
	mov	e,a
	mvi	c,101	; BDOS return directory label data
	call	bdos
	sta	dirlabel	
	ora	a	; test for directory label
	jz	pr10	; -no-

;----------------------;
; read file date stamp ;
;----------------------;
	LXI	H,FCB
	lxi	d,todfcb
	push	d
	mvi	b,32
	call	copy
	pop	d

	mvi	c,102
	call	bdos	; read XFCB
	cpi	-1
	jz	pr10	; -no XFCB-

	lxi	d,todfcb
;------------------------;
; read create date stamp ;
;------------------------;
	lda	dirlabel
	ani	00010000b
	jz	pr08
	lxi	h,24	; offset to create/access stamp
	dad	d
	push	d
	lxi	d,todcre
	mvi	b,4
	call	copy
	pop	d
;------------------------;
; read update date stamp ;
;------------------------;
pr08:	lda	dirlabel
	ani	00100000b
	jz	pr09
	lxi	h,28	; offset to update stamp
	dad	d
	push	d
	lxi	d,todupd
	mvi	b,4
	call	copy
	pop	d
;------------------------;
; read access date stamp ;
;------------------------;
pr09:	lda	dirlabel
	ani	01000000b
	jz	pr10
	lxi	h,24	; offset to create/access stamp
	dad	d
	push	d
	lxi	d,todacc
	mvi	b,4
	call	copy
	pop	d

;----------------------------;
; Copy filename into heading ;
;----------------------------;
pr10:	LXI	H,HEADFL
	LXI	D,HEADFL+1
	mvi	m,' '
	mvi	b,8+3
	call	copy	; fill file name with blanks

	LXI	H,FCB+1
	LXI	D,HEADFL
	mvi	b,8
	call	copy	; copy file name

	mvi	b,8
pr11:	dcx	d
	ldax	d
	cpi	' '	; test for trailing spaces in file name
	jnz	pr12	; -no-
	dcr	b
	jnz	pr11
pr12:	inx	d
	mvi	a,'.'
	stax	d
	inx	d
	mvi	b,3
	call	copy	; copy file type

	lda	formfeed
	ora	a
	jz	pr13
	MVI	E,FFCC	; SEND FORM FEED OUT
	MVI	C,LOUT
	CALL	BDOS
PR13:
	LDA     PAGE$L
	STA	LINECT	; Set line count to page size
;---------------------------------;
; Add current date/time to header ;
;---------------------------------;
	CALL	DATES		; Fetch system TOD

	LXI	H,HEADLN
	lxi	d,todblk
	call	ascdates

;-------------------------------------;
; convert file date stamps into ascii ;
;-------------------------------------;
	lhld	todcre		; BDOS days
	mov	a,h
	ora	l
	jz	pr14		; no date
	lxi	d,todcre	; TOD structure
	lxi	h,prtcre
	call	ascdates
pr14:
	lhld	todupd		; BDOS days
	mov	a,h
	ora	l
	jz	pr15		; no date
	lxi	d,todupd	; TOD structure
	lxi	h,prtupd
	call	ascdates
pr15:
	lhld	todacc		; BDOS days
	mov	a,h
	ora	l
	jz	pr16		; no date
	lxi	d,todacc	; TOD structure
	lxi	h,prtacc
	call	ascdates

;----------------;
; print new page ;
;----------------;
pr16:	CALL    NEWPG

	page

;==========================;
;READ NEXT BUFFER FROM DISK;
;==========================;
NXTBUF:
	PUSH	B
	LXI	D,FCB
	MVI	C,20
	CALL	BDOS	;READ RECORD
	LXI	H,DMA	;GET BUFFER ADDRESS
	POP	B	;GET BACK CHAR COUNT IN C
	MVI	B,128	;BUFFER LENGTH
	ORA	A
	JNZ	DONE	;HAD EOF OR NON-ASCII FILE (MISSING RECORD)

; calculate check sum if required
	lda	CHKSUM	; Set to zero to supress check sum display
	ora	a
	cnz	docck
; test and display 128 bytes of characters
	LXI	H,DMA	;SET B, HL FOR FOLLOWING CODE
	MVI	B,128
NXTCHAR:
	PUSH	H	;SEE IF CONSOLE CHARACTER WAITING
	PUSH	B	;  IF SO, TERMINATE PRINT
	mvi	e,0feh
	mvi	c,6	; BDOS Direct Console I/O
	call	bdos
	POP	B
	POP	H
	ORA	A
	JNZ	ABORT
	MOV	A,M	;GET CHARACTER
	CPI	1AH	;SEE IF CNTL-Z
	JZ	NXTBUF
	MOV	E,A
	ani	07fh
	CPI	LFCC
	JZ	NOTAB
	MOV	A,C	;Test for first character in line
	CPI	0
	CZ	LINE
	MOV	A,E
	ani	07fh
	CPI	09H	;SEE IF TAB
	JNZ	NOTAB
	MOV	A,C	;SEE HOW MANY SPACES TO WRITE
	ADI	8
	ANI	0F8H
	SUB	C	;A HAS NUMBER OF BLANKS TO WRITE
MORESP:
	MVI	E,' '
	PUSH	PSW	;Save count
	CALL	prtchar
	POP	PSW	;Recover count in A
	DCR	A
	JNZ	MORESP
	JMP	NOLF
NOTAB:
	CALL	prtchar	;WRITE CHARACTER TO LIST
NOLF:
	INX	H	;ADVANCE TO NEXT CHAR IN DISK BUFFER
	DCR	B
	JNZ	NXTCHAR
	JMP	NXTBUF
;
ABORT:
	PUSH	H	; READ CONSOLE CHARACTER TO CLEAR BUFFER
	PUSH	B
	mvi	e,0ffh
	mvi	c,6	; BDOS Direct Console I/O
	call	bdos
	POP	B
	POP	H
DONE:			;GOT EOF
; display check sum if required
	lda	CHKSUM	; Set to zero to supress check sum display
	ora	a
	cnz	prtcck
	CALL    pagetop  ; Move to TOP of page
	MVI	E,CRCC	;PUT OUT CR SO TTY40 MOTOR WILL TURN OFF
	CALL	prtchar
;
RETURN:			;NORMAL RETURN
	mov	c,0
	jmp	bdos	; BDOS system reset
;----------------------------------------------
;FORM CHECKSUM FOR ALL 128 CHARACTERS IN BUFFER
;----------------------------------------------
docck:
	LDA	CKSUM	; CHECKSUM
CALCCK:
	RLC		;CHECKSUM IF FORMED BY
	XRA	M	;  ROTATING LEFT PREVIOUS CHECKSUM VALUE
	INX	H	;  (STARTING WITH ZERO) AND EXCLUSIVE-ORING
	DCR	B	;  NEXT BYTE FROM BUFFER
	JNZ	CALCCK
	STA	CKSUM
	ret
;-----------------------------;
;WRITE OUT CHECKSUM TO LISTING;
;-----------------------------;
prtcck:	LDA	CKSUM	;CHECKSUM
	ANI	0F0H
	RRC
	RRC
	RRC
	RRC
	ADI	'A'
	STA	CK1
	LDA	CKSUM
	ANI	0FH
	ADI	'A'
	STA	CK2
	LXI	H,CKMSG
	jmp	prtmsg

;
;
;
NEWPG:			;ADVANCE TO NEW PAGE
	CALL    pagetop   ;MOVE TO TOP OF PAGE
	LXI	H,HEADPG
	DCX     H
	CALL	DIGIT	; Increment page number
;------------------------
;PUT OUT PAGE HEADER LINE
;------------------------
	LXI	H,HEADER
	call	prtmsg

	lhld	todcre
	mov	a,h
	ora	l
	lxi	h,create
	cnz	prtmsg

	lhld	todupd
	mov	a,h
	ora	l
	lxi	h,update
	cnz	prtmsg

	lhld	todacc
	mov	a,h
	ora	l
	lxi	h,access
	cnz	prtmsg

	mvi	e,crcc
	call	prtchar

	lda	WIDTH	; WIDTH of page = 80 characters
uline:	push	psw
	mvi	e,'_'
	call	prtchar
	pop	psw
	dcr	a
	jnz	uline

	lxi	h,headgp
	call	prtmsg

	mvi	c,0	; set character count to zero
	ret
;--------------------
; MOVE TO TOP OF PAGE
;--------------------
pagetop:
	LDA     PAGE$L
	LXI     H,LINECT	;INCREMENT LINE COUNT
	SUB	M	;CHECK NOT ALREADY AT TOP OF PAGE
	MOV     M,A
	INR     M
	RZ
NEWPG5: DCR     M
	RZ	; LOOP UNTIL AT TOP OF PAGE
	LDA	FORMFEED	; TEST IF WE FORM FEED OR LINE COUNT
	ORA	A
	JNZ	NEW1A
	LDA     SKIP
	ORA     A
	JNZ     NEWPG6
	MVI	E,LFCC	;PUT OUT LINE FEED
	MVI	C,LOUT
	PUSH    H
	CALL	BDOS
	POP     H
NEWPG6: JMP     NEWPG5
NEW1A:
	MVI	E,FFCC	;PUT OUT FORM FEED
	MVI	C,LOUT
	CALL	BDOS
	MVI	E,CRCC	;PUT OUT CARRIAGE RETURN
	MVI	C,LOUT
	CALL	BDOS
	ret
prtmsg:
	MOV	A,M
	ORA	A
	RZ
	MOV	E,A
	CALL	prtchar
	INX	H
	JMP	prtmsg
prtchar:
	MOV	A,E
	CPI	' '
	JC	CXHAR0
	lda	width
	cmp	c
	cc	NL
	INR	C
CXHAR0:	LDA     SKIP
	ORA     A
	JNZ     CHAR4
	PUSH    B
	PUSH    D
	PUSH	H
	MOV     A,E
	ani	07fh
	CPI	FFCC
	JZ	CHAR0
	CPI     LFCC
	JNZ     CHAR3
	LDA     LEN
	LXI	H,LINECT;LINE COUNT
	SUB	M	;SEE IF TIME FOR NEW PAGE
	SBI     2
	JNC     CHAR1
CHAR0:	CALL    NEWPG
	POP     H
	POP     D
	POP     B
	RET
CHAR1:
	INR	M	;Increment line count
CHAR3:
	MVI	C,LOUT
	CALL	BDOS
	POP	H
	POP     D
	POP     B
CHAR4:	MOV	A,E
	ani	07fh
	CPI     CRCC
	RNZ
CR:     MVI     C,0     ; SET to 0
	RET
NL:     MVI     C,0
	PUSH    D
	MVI     E,CRCC   ;C/R
	CALL    prtchar
	MVI     E,LFCC   ;L/F
	CALL    prtchar
	POP     D
	RET
LINE:	PUSH	H
	PUSH	D
	LXI	H,LINENO+4
LINE1:	CALL	DIGIT	; Increment line number
	LXI     H,LINENO ; Test if NO < start or > finish
	LXI     D,LINEF
	CALL    COMP	; Set SKIP flag according to result
	ORA     A
	JNZ     LINE2
	LXI     D,LINENO
	LXI     H,LINEL
	CALL    COMP	; Set SKIP flag according to result
LINE2:
	lda	number; check if line numbers to be displayed
	ora	a
	jz	LINE3
	LXI     H,LINENO
	CALL	prtmsg
line3:	POP	D
	POP	H
	RET
DIGIT:	INR	M	; Increment decimal number
	MOV	A,M
	CPI	'9'+1
	RC
	MVI	M,'0'
	DCX	H
	MOV	A,M
	CPI	' '
	JNZ	DIGIT
	MVI	M,'1'
	RET
;
COMP:   PUSH    B
	MVI     C,5
COMP1:  LDAX    D
	CMP     M
	JNZ     COMP3
	INX     D
	INX     H
	DCR     C
	JNZ     COMP1
COMP2:  SUB     A
	JMP     COMP4
COMP3:  JC      COMP2
	MVI     A,1
COMP4:  STA     SKIP
	POP     B
	RET
;
FCB	EQU	5CH
DMA	EQU	80H
BDOS	EQU	5
	DS	128
stack:	DW	0
HEADER:	DB	CRCC,LFCC
;		 0123456789012345678901234567890123456789
HEADLN:	DB	'                                  '
headuser:	db	'  '
headisk:	db	' :'
HEADFL:	DB	'filename.typ'
	db	'                 PAGE    0'
HEADPG	equ	$
	DB	CRCC,LFCC
	DB	'                           ',0
create:	db	'Created: '
prtcre:	db	'                 ',0
update:	db	'Updated: '
prtupd:	db	'                 ',0
access:	db	'Accessed: '
prtacc:	db	'                 ',0

HEADGP:	DB	CRCC,LFCC,LFCC,0

CKMSG:	DB	LFCC,CRCC,LFCC,'CHECKSUM = '
CK1:	DS	1
CK2:	DS	1
	DB	CRCC,0
CKSUM:	DB	0
LINECT:	DB	0
NOTFOUND:	DB	'FILE NOT FOUND',CRCC,LFCC,'$'
LINENO:	db	'    0:  ',0

;------------;
; system TOD ;
;------------;
todblk:	dw	0	; Day number 1 = Jan 1 1978
	db	0	; hour (BCD)
	db	0	; min (BCD)
	db	0	; sec (BCD)

;----------------------;
; file XFCB tod stamps ;
;----------------------;
dirlabel:	db	0	; fill with directory label data

todfcb:	ds	32	; space for file date stamp

todcre:			; CREATE DATE
	dw	0	; Day number 1 = Jan 1 1978
	db	0	; hour (BCD)
	db	0	; min (BCD)
	db	0	; sec (BCD)

todupd:			; UPDATE DATE
	dw	0	; Day number 1 = Jan 1 1978
	db	0	; hour (BCD)
	db	0	; min (BCD)
	db	0	; sec (BCD)

todacc:			; ACCESS DATE
	dw	0	; Day number 1 = Jan 1 1978
	db	0	; hour (BCD)
	db	0	; min (BCD)
	db	0	; sec (BCD)

;--------------------;
; TOD work variables ;
;--------------------;
todday:	dw	0	; Day number 1 = Jan 1 1978
todhr:	db	0	; hour (BCD)
todmin:	db	0	; min (BCD)
todsec:	db	0	; sec (BCD)
toddd:	db	0
todmm:	db	0
todyy:	db	0

month:	dw	0,31,59,90,120,151,181,212,243,273,304,334,365


;----------------------------------------------------------------
;DATES - RETURN ASCII DATE, TIME TO AREA ADDRESSED BY HL ON ENTRY
;----------------------------------------------------------------
DATES:
	lxi	d,todblk
	mvi	c,105		; BDOS Get Date and Time
	call	bdos
	sta	todblk+4	; and seconds
	ret

;-------------------------------------------------------------------
;ASCDATES - RETURN ASCII DATE, TIME TO AREA ADDRESSED BY HL ON ENTRY
; Entry:	<HL> -> start of text
;		<DE> -> TOD block
; Returns:	<HL> -> end of text
;-------------------------------------------------------------------
ascdates:
	push	hl
	xchg
	lxi	d,todday
	mvi	b,5
	call	copy

	lhld	todday		; BDOS days
	call	tod2dmy		; convert date into day, month & year
	pop	hl

	lda	toddd	;GET Day
	CALL	NUMTOCON

	MVI	M,'/'
	INX	H

	lda	todmm	;GET Month
	CALL	NUMTOCON

	MVI	M,'/'
	INX	H

	lda	todyy	;GET Year
	CALL	NUMTOCON

	MVI	M,' '
	INX	H

	lda	todhr	; Get hours
	CALL	BCDASC

	MVI	M,':'
	INX	H

	lda	todmin	;GET MINUTES
	CALL	BCDASC

;-----	MVI	M,':'
;-----	INX	H
;-----
;-----	lda	todsec	; SECONDS
;-----	CALL	BCDASC

	INX	H
	RET		;HL LEFT SET AFTER LAST CHARACTER IN TIME

;--------------------------------------------------------------;
; convert date with day 1 = jan 1st 1978 into day month & year ;
;--------------------------------------------------------------;
tod2dmy:		; <HL> = days since 1st jan 78
; now subtract 365 or 366 for each year after 1978
	dcx	h
	lxi	b,1978
dmy1:	lxi	d,-365
	mov	a,c
	ani	011b		; check if divisible by 4
	jnz	dmy2
	dcx	d		; yes so year has 365 days
dmy2:	dad	d
	jnc	dmy3		; result less than 0
	inx	b
	jmp	dmy1
dmy3:
	inx	h
; DE = HL-DE
	mov	a,l
	sub	e
	mov	e,a
	mov	a,h
	sbb	d
	mov	d,a

	push	d
	lxi	h,-1900
	dad	b		; <HL> = years > 1900
	lxi	d,-100		; but if <HL> > 99, subtract 100
dmy4:	mov	a,h
	ora	a
	jnz	dmy5
	mov	a,l
	cpi	100		; check range
	jc	dmy6
dmy5:	dad	d		; adjust by 100
	jmp	dmy4
dmy6:	sta	todyy		; save year
	pop	d
; on entry <BC> = absolute year, <DE> days remaining in year
	lxi	h,month+12*2-1
	mvi	b,12
	mov	a,c
	ani	11b		; test  if current year is a leap year
	jnz	dmy7
	dcx	d		; so decrement days to allow for Feb 29th
dmy7:	mov	a,m
	dcx	h
	cmp	d		; test (days to months) with <DE>
	jc	dmy9		; have month
	jnz	dmy8
	mov	a,m
	cmp	e
	jc	dmy9
dmy8:	dcr	b		; decrement month
	dcx	h		; decrement days in month pointer
	mov	a,b
	cpi	2		; are we into FEB
	jnz	dmy7
	mov	a,c
	ani	11b		; are we in leap year
	jnz	dmy7
	inx	d		; YES so correct days adjustment
	jmp	dmy7
dmy9:	mov	a,b
	sta	todmm		; save month
	mov	a,e
	sub	m		; p.s. who cares about <D> - (hl+1)
	sta	toddd		; save day
	ret

;-----------------------------------------------------------

;
;
NUMTOCON:		; Convert binary to BCD
	cpi	10
	jc	bcdasc	; Binary same as BCD
	MOV	B,A
	XRA	A
NUM0:	INR	A
	DAA
	DCR	B
	JNZ	NUM0
BCDASC:			; Convert packed BCD number into ascii
	PUSH	PSW
	ANI	0F0H	;CONVERT PACKED DECIMAL NUMBER AND PUT IN BUFFER
	RRC
	RRC
	RRC
	RRC
	CALL	NUM2
	POP	PSW
	ANI	0FH
NUM2:	ADI	'0'
	CPI	'9'+1
	JC	NUM3
	ADI	'A'-('9'+1)
NUM3:	MOV	M,A
	INX	H
	RET
;
copy:			; COPY <B> bytes from <HL> to <DE>
	mov	a,m
	stax	d
	inx	h
	inx	d
	dcr	b
	jnz	copy
	ret


;
;
	END
