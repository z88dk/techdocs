        TITLE   * DIS-ASSEMBLED QX-16 IPL V3 
;  
;   QQQQQ     XX     XX          11     66
;  QQ   QQ     XX   XX          111    66     
; QQ     QQ     XX XX            11   66        
; QQ     QQ      XXX     ====    11   66 6666  
; QQ  QQ QQ     XX XX            11   66    66  
;  QQ   QQ     XX   XX           11    66   66 
;   QQQQQ QQ  XX     XX        111111   66666
;
;   IIIIII    PPPPPPPP     LL      
;     II      PP     PP    LL
;     II      PP     PP    LL
;     II      PPPPPPPP     LL
;     II      PP           LL
;     II      PP           LL
;   IIIIII    PP           LLLLLLLL 
;   
;   INITIAL   PROGRAM      LOADER.
;
;     USING  Z80A (3.9936MHZ)
;

        .Z80
;
        .PHASE  0
;
;
        PAGE    60
;
;************  MACRO DEFINE.   *******************
;
DELAY   MACRO            ; 
        LD      B,5      ; DELAY 0.5 SEC. ROUTINE.
        LD      DE,-1
        LD      HL,14814
        ADD     HL,DE      
        JR      C,$-1     
        DJNZ    $-6         
        ENDM
;
;******************************************
;
CKOUT   MACRO 
        LD      C,CLKA   ; CLOCK ADDR.
        OUT     (C),D    ; ADDR. SET
        DEC     C        ; CLOCK DATA.
        OUT     (C),E    ; DATA WRITE
        ENDM
;
;
;*******************************************
;
CKIN    MACRO
        LD      C,CLKA   ; CLOCK ADDR.
        OUT     (C),D    ; ADDR. SET
        DEC     C        ; CLOCK DATA
        IN      E,(C)    ; DATA READ
        ENDM
;
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
;
;7220 FIFO EMPTY CHK
;
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
EMPTY   MACRO     
        IN      A,(CRTS)   ; READ STATUS.
        AND     00000110B 
        XOR     00000100B  ;FIFO EMPTY CHK
        JR      NZ,$-6     ;IF NOT EMPTY WAIT
        ENDM
; 
;
        PAGE
;
;***** START THE INITIAL PROGRAM LOADER ****************
;
START:  LD      SP,0000H
;QX10   LD      A,MB1 	  ; MEM.BANK-1 SELECT
;QX10   OUT     (MBRG),A
        IM      0 	  ; USING 8259A
;
;
;------------------------------;
;        8253 MODE SET
;------------------------------;
;
	LD      A,C0M1 	   ; 1.CH0.MODE1
        OUT     (CTC1+3),A ; COMAND REG.
        LD      A,00H 	   ; BUZZER ON TIME
        OUT     (CTC1),A
        LD      A,01H
        OUT     (CTC1),A
;
        LD      A,C0M3 	   ; 2.CH0.MODE3
        OUT     (CTC2+3),A ; COMAND REG.
        LD      A,00H 	   ; BUZZ FREQ.
        OUT     (CTC2),A
        LD      A,00001000B ; 1KHZ
        OUT     (CTC2),A
;
        LD      A,C1M3 	   ; 2.CH1.MODE3
        OUT     (CTC2+3),A ; COMAND REG.
        LD      A,80H 	   ; KEY BOARD CLK.
        OUT     (CTC2+1),A
        LD      A,06H 	   ; 1200 BPS
        OUT     (CTC2+1),A
;
        LD      A,C2M3 	   ; 2.CH2.MODE3
        OUT     (CTC2+3),A ; COMAND REG.
        LD      A,0D4H 	   ; RS232C CLK.
        OUT     (CTC2+2),A
        LD      A,00H 	   ; 9600 BPS
        OUT     (CTC2+2),A
;
;------------------------------;
;        8259 MODE SET
;------------------------------;
;
;QX10   LD      A,ICW1
;QX10   OUT     (ICM0),A  ; INITIALIZE -1
;QX10   LD      A,ICW2    ; (MASTER)
;QX10   OUT     (ICM1),A  ; .......... -2
	ld	hl,0800H
	ld	a,015H
	or	l
	out	(ICM0),a
	ld	a,h
	out	(ICM1),a
        LD      A,ICW3
        OUT     (ICM1),A  ; .......... -3
        LD      A,ICW4
        OUT     (ICM1),A  ; .......... -4
        LD      A,00101111B ; KEYBOARD AND FLOPPY IS ACTIVE
        OUT     (ICM1),A  ; MASK 
;
;QX10   LD      A,ICW5
;QX10   OUT     (ICS0),A  ; INITIALIZE -1
;QX10   LD      A,ICW6    ;   (SLAVE)
;QX10   OUT     (ICS1),A  ; .......... -2
	ld	hl,0820H
	ld	a,0B5H
	or	l
	out	(ICS0),a
	ld	a,h
	out	(ICS1),a
        LD      A,ICW7
        OUT     (ICS1),A  ; .......... -3
        LD      A,ICW8
        OUT     (ICS1),A  ; .......... -4
        LD      A,11111010B ; PRINTER AND CALENDAR IS ACTIVE.
        OUT     (ICS1),A  ; MASK (SFT.TMR)
;
;------------------------------;
;        7201 MODE SET
;------------------------------;
;
        LD      HL,SIOTBL ; COMMAND TABLE
        LD      B,0BH  	  ; ....... LENGTH
        LD      C,SIAC 	  ; ....... PORT
        OTIR              ; ....... SET
;
;------------------------------;
;       46818 INITIALIZE
;------------------------------;
;
	LD	DE,CINI1 ; CTRL REG. 1.
	CKOUT		 ; 32.768KHz, 20 MINS.
	LD	D,0BH	 ; CTRL REG. 2.
	LD	E,00AH	 ; SQW,BCD,24H		10/27/82
	CKOUT		 ;
	ld	a,00DH
	out	(CLKA),a
	in	a,(CLKA)
	bit	7,a
	jr	nz,set8255
        LD      DE,CINI3 ; CTRL REG. 4.
        CKOUT            ; SET RAM VALID FLAG.
	ld	d,03EH
	ld	e,0
	ckout		 ;
	ld	d,03FH
	ckout		 ;
set8255:
;                              
;------------------------------;
;         8255 MODE SET
;------------------------------;
;
 	LD      A,PIMD1  ; MODE WORD
        OUT     (PIOM),A ; A:OUT,B:IN
        LD      A,0BH 	 ; RESET=1
        OUT     (PIOM),A
        LD      A,01H 	 ; STB=1
        OUT     (PIOM),A
        LD      A,0AH 	 ; RESET=0
        OUT     (PIOM),A
;
;-------------------------------;
;	RESET DMA		;
;-------------------------------;
;
	XOR	A	 ;
	OUT	(DMACL),A; MASTER CLEAR.
	LD	A,049H	 ; SET DMA MODE.
	OUT	(DMAMD),A;
	LD	HL,DMA	 ; SET DATA ADDRESS.
	LD	A,L	 ;
	OUT	(042H),A ; L.
	LD	A,H	 ;
	OUT	(042H),A ; H.
	LD	A,1	 ; DATA LENGTH.
	OUT	(043H),A ; L.
	XOR	A	 ;
	OUT	(043H),A ; H.
	LD	A,060H	 ; COMMAND.
	OUT	(DMACM),A;
	LD	A,00DH	 ; DMA MASK RESET.
	OUT	(DMASK),A;
;
	PAGE
;
;------------------------------;
;        7220 MODE SET
;------------------------------;
;
        LD      A,00H       ;C   RESET   
        OUT     (CRTD),A
        LD      A,01101111B ;C   MASTER
        OUT     (CRTD),A
	IN	A,(2CH)
	AND	01B	    ; COLOR ?
	JR	NZ,C7220    ; YES.
        LD      A,00001110B ;C   SYNC SET
        OUT     (CRTD),A
	LD	C,CRTS	    ;
	LD	B,8	    ;
	LD	HL,MONODSP  ;
	OTIR		    ; SET SYNC. PARAMETER.
        EMPTY               ; EMPTY CHK.
        LD      A,01001011B ;C   CSRFORM 
        OUT     (CRTD),A
        LD      A,00001111B ;P1 L/R=16
        OUT     (CRTS),A
        LD      A,01101101B ;P2  BL BD CST
        OUT     (CRTS),A
        LD      A,01110000B ;P3  CFI BL
        OUT     (CRTS),A
        LD      A,01000110B ;C   ZOOMW
        OUT     (CRTD),A
	XOR	A	    ; X1.
        OUT     (CRTS),A    ;
        OUT     (CRTZ),A    ; HARDWARE ZOOMMING X 1.
        EMPTY               ;FIFO EMPTY CHK
        LD      A,01000111B ;C   PITCHW
        OUT     (CRTD),A
        LD      A,80        ;P1  80CHR./LINE
        OUT     (CRTS),A
        LD      A,01110000B ;C   SCROLLW
        OUT     (CRTD),A
        LD      A,00000000B ;P1  SAD1L
        OUT     (CRTS),A
        OUT     (CRTS),A    ; P2.
        OUT     (CRTS),A    ; P3.
        LD      A,00011001B ;P4  SLH
        OUT     (CRTS),A
	LD	IX,STDSP    ; CLEAR VRAM. (128KB)  02/19/83
	JP	CLRCRT
;
;*  COLOR MODE
;
C7220:	LD	A,0EH		; SYNC SET.
	OUT	(CRTD),A	;
	LD	C,CRTS		;
	LD	B,8		;
	LD	HL,COLODSP	;
	OTIR			;
	EMPTY			;
	LD	A,4BH		; CSRFORM.
	OUT	(CRTD),A	;
	XOR	A		;
	OUT	(CRTS),A	; P1.  L/R = 1. NON DSP.
	OUT	(CRTS),A	; P2.
	OUT	(CRTS),A	; P3.
	LD	A,46H		; ZOOM.
	OUT	(CRTD),A	;
	XOR	A		; X 1.
	OUT	(CRTS),A	;
	OUT	(CRTZ),A	;
	EMPTY			;
	LD	A,47H		; PITCHW.
	OUT	(CRTD),A	;
	LD	A,40		;
	OUT	(CRTS),A	;
	LD	A,70H		;
	OUT	(CRTD),A	; SCROLL.
	XOR	A		;
	OUT	(CRTS),A	; P1.
	OUT	(CRTS),A	; P2.
	OUT	(CRTS),A	; P3.
	LD	A,25		; P4
	OUT	(CRTS),A	;
	LD	A,1		; CLEAR	VRAM.   (BLUE   128KB)	02/19/83 0301
	LD	HL,CLRD		;
	JP	COLOCLR		;
;
CLRD:	LD	A,4		; CLEAR VRAM.   (RED    128KB)	02/19/83 0301
	LD	HL,CLGR		;
	JP	COLOCLR		;
;
CLGR:	LD	A,2		; CLEAR VRAM.   (GREEN  128KB)	02/19/83 0301
	LD	HL,RCOVFL	;
	JP	COLOCLR		;
;
RCOVFL:
;QX10	LD	DE,0F000H	;
	ld	de,0fe00H	;
	LD	HL,COLODSP	;
	LD	BC,8		;
	LDIR			;
;QX10	LD	HL,0F000H	;
	ld	hl,0fe00H	;
	SET	4,(HL)		; SET FLASH LESS MODE.
	LD	B,8		;
	LD	C,CRTS		;
	LD	A,0EH		; SYNC SET.
	OUT	(CRTD),A	;
	OTIR			;
	EMPTY
	LD	A,47H		; PITCHW.
	OUT	(CRTD),A	;
	LD	A,40		;
	OUT	(CRTS),A	;
	LD	A,70H		; SCROLL.
	OUT	(CRTD),A	;
	XOR	A		;
	OUT	(CRTS),A	;
	OUT	(CRTS),A	;
	OUT	(CRTS),A	;
	LD	A,25		;
	OUT	(CRTS),A	;
	ld	a,00100000B
	out	(CRTD),a
STDSP:  LD      A,01101011B ;C  DISP START
        OUT     (CRTD),A
;
	XOR	A	 ; DMA MASTER CLEAR.
	OUT	(DMACL),A;
;
	ld	hl,msg$ipl
	ld	b,1
	ld	d,00AH
	ld	e,020H;' '
	ld	ix,ITEST
	jp	WTO$16

	PAGE
;
;*************************************************             
;*                                               *
;*      *   * QX-10 DIAGNOSTIC PROCESS.          *       
;*      *   *                                    *
;*      *   * INITIAL TEST ROUTINE.              *
;*      *   * 82.07.28.    BY Y.U.               *  
;*                                               *
;*************************************************
;
;
ITEST:  ;***************** LOAD TEST ************************
        LD      B,0            ;             
        LD      A,B            ;  
        OR      A              ;
        JR      Z,P0010        ;
PHALT:  JP      PERR           ; ERROR PROCESS.
        HALT
;
P0010:  ADD     A,0D2H         ; 1101 0010B.
        RLCA                   ; 1010 0101B.
        JR      NC,PHALT       ; 
        LD      B,A            ; A = 0A5H.
        LD      C,B            ;
        LD      D,C            ;
        LD      E,D            ;
        LD      H,E            ;
        LD      A,H            ;
        JP      P,PHALT        ; A  MINUSE ?  (0A5H)
        XOR     0A5H           ; A = 0A5H ?
        JR      NZ,PHALT       ; NO.
;                              ; YES. 
;
;************************ EXCHANGE TEST. *************************
        LD      BC,00F1EH
        LD      DE,02D3CH
        LD      HL,04B5AH
        EXX         
        EXX                   ; A = 000H.
        EX      DE,HL         ; DE=04B5AH,HL=02D3CH
        AND     B             ; A = 000H.
        XOR     C             ; A = 01EH. 
        OR      D             ; A = 05FH.
        AND     E             ; A = 05AH.
        ADD     A,H           ; A = 087H.
        SUB     L             ; A = 04BH.
        CP      04BH
        JR      NZ,PHALT
;
;
;********************** ADD,SUB TEST ***********************
;
        XOR     A             ; A = 00.
        LD      BC,0102H      ; B = 01, C = 02.
        LD      DE,0304H      ; D = 03, E = 04.
        LD      HL,0506H      ; H = 05, L = 06.
        ADD     A,B           ; A = 01H.
        ADD     A,C           ; A = 03H.
        ADD     A,D           ; A = 06H.
        ADD     A,E           ; A = 0AH.
        ADD     A,H           ; A = 0FH.
        ADD     A,L           ; A = 15H.
        CP      015H          ; A = 15 ?
        JP      NZ,PHALT      ; NO.  ERROR.
        ADD     HL,BC         ; HL = 0608H.
        ADD     HL,DE         ; HL = 090CH.
        ADD     HL,HL         ; HL = 1218H.
        ADD     A,H           ; A = 27H.
        ADD     A,L           ; A = 3FH.
        CP      03FH          ; A = 03FH ?
        JP      NZ,PHALT      ; NO.  ERROR.
;
        LD      IX,P0011      ;
        LD      BC,1          ;
        LD      DE,1          ;
        LD      SP,0          ;
P0011:  NOP                   ;
        NOP                   ;
        XOR     A             ; A = 0.
        ADD     IX,BC         ; IX = P0011+1.
        ADD     IX,DE         ; IX = P0011+2.
        ADD     IX,SP         ; IX = P0011+2.
        LD      A,(IX+0)      ; A = [XOP   A].
        CP      0AFH          ; A = [XOP   A] ?
        JP      NZ,PHALT      ; NO.  ERROR.     
        LD      IY,P0011      ;
        ADD     IY,BC         ; IY = P0011+1.
        ADD     IY,DE         ; IY = P0011+2.
        ADD     IY,SP         ; IY = P0011+2.
        LD      A,(IY+0)      ; A = {XOP   A}.
        CP      0AFH          ; A = {XOP   A} ?
        JP      NZ,PHALT      ; NO.  ERROR.
;
;
;********************** CPI TEST ****************************
        LD      A,0           ;
        LD      HL,P0075
        LD      BC,3
        CPI                   ; EXECUTE.
        JP      NZ,PHALT      ; ERROR.
;********************* INC AND DEC TEST **********************
        INC     A             ; A = 1.
        JP      Z,PHALT
        DEC     A
        JP      NZ,PHALT      ; A = 0.
;********************* DAA,CPL AND NEG TEST ******************
        LD      A,9           ;
        ADC     A,1           ;
        DAA                   ; DECIMAL ADJUST ACC.
        CP      010H
        JP      NZ,PHALT
        CPL                   ; COMPLEMENT ACC.
        CP      0EFH
        JP      NZ,PHALT
        NEG                   ; NEGATE ACC.
        CP      011H
        JP      NZ,PHALT      ;
;********************* CARRY FLAG TEST ***********************
        SCF                   ; SET CARRY FLAG.
        JP      NC,PHALT
        CCF                   ; RESET CARRY FLAG.
        JP      C,PHALT 
;
;*********************** JUMP TEST *********************************
        LD      HL,P0080      ;
        LD      IX,P0090
        LD      IY,P0100
        JP      (HL)
        JP      PHALT   
        HALT
P0080:  JP      (IX)
        HALT
P0090:  JP      (IY)
        HALT
P0100:  LD      B,5          ;
P0110:  DJNZ    P0110        ;
        XOR     A            ;
        OR      B            ; B = 0 ?
        JP      NZ,PHALT     ; NO.  ERROR.
;*                   
;*********************************************************
;*
;** RESIDENT RAM WRITE/READ TEST AND ZERO CLEAR. *****************************
;*
P0140:
        LD      HL,0F000H    ; SET START ADDRESS. 
        LD      BC,01000H    ; SET MEMORY BYTE COUNT.
P0141:  LD      (HL),0FFH    ;
        INC     HL           ; WRITE 0FFH ALL RAM.
        DEC     BC           ;
        LD      A,B          ;
        OR      C            ; END CHECK. 
        JR      NZ,P0141     ; REPEAT.
        LD      BC,00FFFH    ; CHECK MEMORY LENGTH.
        LD      HL,0FFFFH    ; SET CHECK START ADDRESS.
        LD      DE,0FFFEH    ;
MTST1:  LD      A,(DE)       ; READ SOURCE DATA.
        AND     (HL)         ; CHECK WRITTEN DATA. 
        JP      Z,MERR       ; ERROR.
        CP      0FFH         ;
        JP      NZ,MERR      ;
        XOR     (HL)         ; A = 0.    
        LD      (HL),A       ; (HL) = A = 0.
        LD      A,(HL)       ; CHECK ZERO CLEAR.
        OR      A            ;
        JP      NZ,MERR      ; ERROR.
        DEC     HL           ; DECREMENT ADDRESS.
        DEC     BC           ;     *     COUNTER.
        DEC     DE           ;     *     ADDRESS.
        LD      A,B          ;
        OR      C            ; MEMORY TEST END ? 
        JR      NZ,MTST1     ; NO.  REPEAT.
        LD      A,(HL)       ; CHECK LAST BYTE.
        XOR     0FFH         ;
        LD      (HL),A       ; SET LAST BYTE = 00H
        JP      NZ,MERR      ; ERROR.
;
;********************* ROTATE TEST ***************************
        LD      A,041H        ; A = 041H.
        RLCA                  ; A = 082H.
        JP      C,PHALT       ;           CY = 0.
        RLA                   ; A = 004H.         
        JP      NC,PHALT      ;           CY = 1.
        RLA                   ; A = 009H.
        JP      C,PHALT       ;           CY = 0.
        RRCA                  ; A = 0084H.
        JP      NC,PHALT      ;           CY = 1.
        RRA                   ; A = 0C2H.
        JP      C,PHALT       ;           CY = 0.
        LD      IX,0FFFFH     ;
        LD      (IX+0),A      ;
        RLC     (IX+0)        ; (IX) = 085H.
        JP      NC,PHALT      ;           CY = 1.
        RL      (IX+0)        ; (IX) = 00BH.
        JP      NC,PHALT      ;           CY = 1.
        RRC     (IX+0)        ; (IX) = 0085H.
        JP      NC,PHALT      ;           CY = 1.
        RR      (IX+0)        ; (IX) = 0C2H.
        JP      NC,PHALT      ;           CY = 1.
        SLA     (IX+0)        ; (IX) = 084H.
        JP      NC,PHALT      ;           CY = 1.
        SRA     (IX+0)        ; (IX) = 0C2H.
        JP      C,PHALT       ;           CY = 0.
        SRL     (IX+0)        ; (IX) = 061H.
        JP      C,PHALT       ;           CY = 0.
        LD      HL,0FFFFH     ; HL = IX.  (HL) = 061H.
        LD      A,0EH         ;
        RLD                   ; A=006H, (HL)=01EH.
        JP      Z,PHALT       ;
        RRD                   ; A=00EH, (HL)=061H.
        JP      Z,PHALT
;*********************** BIT TEST ********************************
        BIT     7,A           ; A = 00EH.
        JP      NZ,PHALT
        BIT     3,A           ; 
        JP      Z,PHALT
        BIT     6,(HL)        ; (HL)=(IX)=061H.            
        JP      Z,PHALT
        BIT     1,(IX+0)      ;
        JP      NZ,PHALT
        SET     6,A           ; A=04EH.
        SET     7,(HL)        ; (HL)=(IX)=0E1H.
        SET     2,(IX+0)      ; (HL)=(IX)=0E5H.
        RES     3,A           ; A = 046H.
        RES     0,(HL)        ; (HL)=(IX)=0E4H.
        RES     5,(IX+0)      ; (HL)=(IX)=0C4H.  
        ADD     A,(IX+0)      ; A = 00AH.
        JP      NC,PHALT      ; 
        JP      Z,PHALT       ;
;
;
;*********************** LDIR TEST **************************
P0030:  LD      DE,0F000H     ;             
        LD      HL,P0040      ;
        LD      BC,P0070-P0040
        LDIR                  ;
        LD      A,2
P0040:  JR      P0050         ;****
        HALT                  ;   *
P0050:  NOP                   ;   *
        JR      P0060         ;   *
        HALT                  ;   *
P0060:  DEC     A             ;   *
        OR      A             ;   *
        JP      Z,P0070       ;   *
        JP      NZ,0F000H     ;   * JUMP 0F000H.
        HALT                  ;**** 
;*********************** LDDR TEST **************************
P0070:  LD      DE,0FC00H     ;
        LD      HL,P0075
        LD      BC,P0075-P0073
        LDDR                  ; EXECUTE.
        JP      0FBFBH        ; JUMP 0FBFBH.
;
P0073:  NOP                   ;****
        NOP                   ;   *
        JP      P0075         ;   *      
        HALT                  ;****        
;
P0075:  NOP
;
;************************ PUSH AND POP TEST. **************************
        LD      SP,0           ;
        LD      IX,0A55AH      ;
        LD      IY,0A55AH      ;
        LD      BC,0A55AH      ;
        LD      DE,0A55AH      ;
        LD      HL,0A55AH      ;
        PUSH    AF
        PUSH    BC
        PUSH    DE
        PUSH    HL
        PUSH    IX
        PUSH    IY
        POP     BC             ; BC =IY. 
        OR      B
        OR      C              ; A = 0FFH.
        LD      C,4
P0020:  POP     DE
        AND     D
        OR      E
        DEC     C       
        JR      NZ,P0020
        POP     IX            ; DUMMY POP.
        LD      B,0FFH
        XOR     B             ; A = 0FFH ?
        JP      NZ,PHALT      ; NO.
;
;********************** SUBROUTINE CALL TEST ***********************
        LD      A,3          ;
        CALL    P0120        ;
        CALL    NZ,P0130     ;
        JP      Z,PHALT      ;
        JP      RAMTEST      ;
;*********************************************************
P0120:  AND     A            ; DUMMY SUBROUTINE 2.       *
        RET                  ;                           *
;                                                        *
P0130:  OR      A            ; DUMMY SUBROUTINE 3.       *
        RET     NZ           ;                           *
        JP      PHALT        ;                           *
        HALT                 ; STOPPER.                  *
;
;******************
;*  ERROR PRCESS  *
;******************
;
;
;***** PROCESSOR ERROR *******
;*
;QX10	PERR:	LD      A,014H       ;
;QX10   OUT     (MBRG),A     ; BUZZER ON.
;QX10   LD      HL,MSG2      ;
;QX10   LD      IX,PERR1     ; SET RETURN ADDRESS.
;QX10   JR      DSPMSG       ; DISPLAY ERROR MESSAGE.  
;QX10	PERR1:  JR      $            ; GOOD BYE !
;QX10   HALT                 ; SAFETY.

PERR:	ld	hl,msg$z80	; Z80 PROCESSOR CHIP FAILED
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,010H		; X = 16
	ld	ix,PERR1
	jp	WTO$16
PERR1:	di			; SAFETY.
	halt			; GOOD BYE !

;---------
; RAM Test
;---------
RAMTEST:	ld	hl,msg$ram;	'TESTING RAM'
	ld	b,2		; Colour
	ld	d,00CH		; Y = 12
	ld	e,022H		; X = 34
	ld	ix,X041EH
	jp	WTO$16
X041EH:	ld	hl,0E000H
	ld	bc,1000H
	ld	ix,X042BH
	jp	X08C7H
X042BH:	ld	hl,START
	ld	de,0E000H
	ld	bc,2000H
	ldir
	jp	XE439H + 0E000h

XE439H:	ld	a,1
	out	(PROM),a	; Disable PROM
	ld	a,00100000B	; Memory Bank 1
	out	(MBRG),a
	ld	hl,START
	ld	bc,0E000H
	ld	ix,XE44EH + 0E000h
	jp	X08C7H + 0E000H

XE44EH:	ld	a,01000000B	; Memory Bank 2
	out	(MBRG),a
	ld	hl,START
	ld	bc,0E000H
	ld	ix,XE45FH + 0E000h
	jp	X08C7H + 0E000H

XE45FH:	ld	a,10000000B	; Memory Bank 3
	out	(MBRG),a
	ld	hl,START
	ld	bc,0E000H
	ld	ix,XE470H + 0E000h
	jp	X08C7H + 0E000H

XE470H:	ld	a,00010000B	; Memory Bank 1
	out	(MBRG),a
	ld	hl,START
	ld	bc,0E000H
	ld	ix,XE481H + 0E000h
	jp	X08C7H + 0E000H

XE481H:	ld	hl,0E000H
	ld	de,START
	ld	bc,2000H
	ldir
	jp	ENDDIAG16    ; END OP. TEST.
; 
;**************** TEST NORMAL END ******************************
;    (N.B. Executing code in Memory Bank 0, not PROM )
ENDDIAG16:
	PAGE
;
;------------------------------;
;        FDC INITIALIZE
;------------------------------;
;       
;
;
FDCINT:
        OUT     (FDMT),A
        CALL    CMCHK    ; FDC READY CHECK
        LD      A,SPCFY  ; SPECIFY COMMAND
        OUT     (FDDT),A
        CALL    CBUSY    ; FDC COMMAND BUSY CHECK
        LD      A,SPCF1  ; SPECIFY -2
        OUT     (FDDT),A
        CALL    CBUSY    ; FDC COMMAND BUSY CHECK
        LD      A,SPCF2  ; SPECIFY -3
        OUT     (FDDT),A

	ld	hl,X04B3H
	ld	(ERRAD),hl
; First check floppy drive ready for 1.5 minutes
	ld	a,0
	ld	(DRIVE),a
	ld	b,3	; number of retries
X04B3H:	call	DRDY	;Check Device Ready
	jp	nz,FDBOOT	; -ready-
	push	bc
	call	wait500
	pop	bc
	djnz	X04B3H
; Floppy drive not ready so check for hard disk
	jp	TST$HD		; Test with CMOS code for hard disk
;
;------------------------------;
;        FD BOOT
;------------------------------;
;       
FDBOOT:	call	era$row12
	call	era$row14
; 
;   RETRY ADDRESS SET
;
;QX10   LD      HL,0
	ld	hl,FDBOOT
        LD      (ERRAD),HL
;
;   RECALIBRATION
;
        LD      A,0 	 ; UNIT:0 , HEAD:0
        LD      (DRIVE),A
        CALL    CALBRT 	 ; RECALIBRATE COMMAND
;
;   SEEK 39 TRACK
;
        LD      A,39
        LD      (TRACK),A
        CALL    SEEK 	 ; SEEK TO 39 TRACK
;
;   SEEK 0 TRACK
;
IPL1:   LD      A,0 	 ; UNIT:0 , HEAD:0
        LD      (DRIVE),A
        CALL    CALBRT 	 ; SEEK TO 0 TRACK
        LD      A,(CALFLG)
 	AND 	A 	 ; CALIBRATION COMPLEAT ?
 	JR 	NZ,IPL1  ; RETRY

;QX10	LD	BC,80*12+33 ; ERASE INSERT MESSAGE.     10/26/82 
;QX10	LD	HL,MSG4	  ;				10/26/82
;QX10	LD	E,(HL)	  ;				10/26/82
;QX10	INC	HL	  ;				10/26/82
;QX10	LD	IX,RDBOOT ;				10/26/82
;QX10	JP	WTO	  ;				10/26/82
;QX10	RDBOOT:
;
;   READ BOOT PROGRAMME
;
	call	READID
	jp	nz,X055BH
	ld	a,(LNGH0)	; Test for 8 or 16 bit boot program
	cp	1		; length = 256 bytes ?
	jp	nz,X0558H	; -no- so must be MSDOS - oh yes
;
;   FDC PARAM. SET - Z80 BOOT FROM 256 BYTE SECTORS
;
        LD      HL,FDPRM
        LD      A,01     ;  N
        LD      (HL),A
      	INC 	HL
        LD      A,10H 	 ; EOT
        LD      (HL),A
      	INC 	HL
        LD      A,0EH 	 ; GPL
        LD      (HL),A
      	INC 	HL
        LD      A,0FFH   ; DTL
;
; READ Z80 BOOT PROGRAMME
;
        LD      (HL),A
	LD      HL,DRIVE ;
        LD      (HL),0 	 ; UNIT:0 , HEAD:0
 	INC 	HL
        LD      (HL),0 	 ; TRACK:0
 	INC 	HL
        LD      (HL),0 	 ; HEAD:0
 	INC 	HL
        LD      (HL),1 	 ; SECTOR:1
        LD      A,0CH
        LD      (LNGTH),A ; SECTOR LENGTH:12
        LD      HL,RAMTOP
        LD      (ADDRS),HL ; RAM ADDRESS
        LD      HL,IPL1 
        LD      (ERRAD),HL ; ERROR ADDRESS
;
        CALL    FDREAD 	 ; READ 0 TRACK 12 SECTOR
;
 	JR 	Z,IPL1   ; ERROR RETRY !
;
; Check for empty first sector
;
	ld	hl,RAMTOP
	ld	b,0
	ld	a,0E5H
X0538H:	cp	(hl)
	jr	nz,Z80FDBOOT
	inc	hl
	dec	b
	jp	z,X055BH
	jr	X0538H
;
; Boot Z80
;
Z80FDBOOT:
	call	era$row10
Z80BOOT:
	ld	a,0
	ld	(0000H),a
	ld	hl,0000H
	ld	de,0001H
	ld	bc,256-1
	ldir

  	JP  	RAMTOP   ; GO TO BOOT PROG.

X0558H:	jp	X0570H
X055BH:	call	era$row14
	ld	hl,msg$syserr;	'INVALID SYSTEM TRACKS FOUND'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,01AH		; X = 26
	ld	ix,X056EH
	jp	WTO$16
X056EH:	di
	halt
;-------------------------------------------------------
; Boot MSDOS compatible (sector size > 256)
;-------------------------------------------------------
X0570H:	call	era$row10
	ld	a,1
	out	(CPU16),a		; ZAP into 8080

	ld	hl,msg$no16;	'16 BIT CARD NOT INSTALLED! UNABLE TO BOOT SYSTEM'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,010H		; X = 16
	ld	ix,X0587H
	jp	WTO$16
X0587H:	di
	halt

;---------------------------------
; Test for hard disk
; Optionally Use code held in CMOS
;---------------------------------
TST$HD:
	ld	a,1
	out	(CMOS),a	; Select CMOS (8000-87FFH)
	ld	hl,(81FCH)	; What goes on in here ?
	ld	de,0AA55H	; test for 1010101001010101B
	or	a
	sbc	hl,de
	jr	nz,NOT$CMOS	; -no-
; Testing CMOS contents
	ld	hl,0
	ld	de,8000H	; start of CMOS
NXT$CMOS:	ld	a,(de)
	xor	l
	ld	l,a
	ld	bc,0
	add	hl,hl
	adc	hl,bc
	inc	de
	ld	a,081H		; test for DE = 81FE
	cp	d
	jp	nz,NXT$CMOS	; -no- so loop
	ld	a,0FEH
	cp	e
	jp	nz,NXT$CMOS	; -no- so loop
	ld	de,(81FEH)
	or	a
	sbc	hl,de
	jr	z,X05C4H	; check sum perhaps
NOT$CMOS:	ld	a,0
	out	(CMOS),a	; remove CMOS
	call	X1CA2H

X05C4H:
	call	8000H		; execute code at 8000H which may be CMOS
	or	a
	jp	z,HDBOOT
	cp	1
	jr	z,no$hd
	call	wait$fd$rdy
	jp	FDBOOT
no$hd:	ld	hl,msg$nohrd;	'HARD DISK NOT RESPONDING'
	ld	e,01CH		; X = 28
X05DAH:	ld	a,0
	out	(CMOS),a	; remove CMOS
	push	de
	push	hl
	call	era$row12
	pop	hl
	pop	de
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	ix,X05F0H
	jp	WTO$16
X05F0H:	call	era$row14
	ld	hl,msg$insert;	'INSERT SYSTEM DISKETTE IN LEFT DRIVE'
	ld	b,4		; Colour
	ld	d,00EH		; Y = 14
	ld	e,016H		; X = 22
	ld	ix,X0603H
	jp	WTO$16
X0603H:	call	DRDY	;Check Device Ready
	jr	z,X0603H
	jp	FDBOOT
X060BH:	di
	halt
;
;------------------------------;
;        HD BOOT               ;
; Using CMOS code at 8000-81ff ;
;------------------------------;
;       
HDBOOT:	ld	de,RAMTOP
	call	8003H
	jr	z,X061FH
	ld	hl,msg$hdperr;	'ERROR READING THE HARD DISK PARTITION TABLE'
	ld	e,012H
	jp	X05DAH
X061DH:	di
	halt
X061FH:	ld	de,1010101001010101B
	ld	hl,(0F1FEH)	; test HD checksum at byte 511
	or	a
	sbc	hl,de
	jp	z,X0635H
	ld	hl,msg$prterr;	'INVALID PARTITION TABLE FOUND'
	ld	e,019H	; X = 25
	jp	X05DAH
X0633H:	di
	halt
X0635H:	ld	b,4
	ld	de,10H
	ld	hl,0F1BEH	; search for  080h at
X063DH:	ld	a,(hl)		; 1BE, 1CE, 1DE, or 1FE
	cp	080H
	jr	z,X064BH
	add	hl,de
	djnz	X063DH
	call	wait$fd$rdy	; -no- so boot from floppy
	jp	FDBOOT
X064BH:	ld	de,4
	add	hl,de
	ld	a,(hl)		; search for 0F0H at (-> 080h) + 4
	and	0F0H
	xor	0F0H
	jr	z,X0673H	; -yes-
;----------------------------------
; Boot from HARD DISC into 8088 CPU
;----------------------------------
	call	era$row10
	ld	a,0
	out	(CMOS),a
	ld	a,1
	out	(CPU16),a		; ZAP into 8080

	ld	hl,msg$no16;	'16 BIT CARD NOT INSTALLED! UNABLE TO BOOT SYSTEM'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,010H		; X = 16
	ld	ix,X0671H
	jp	WTO$16
X0671H:	di
	halt
;
; 0F0H at (-> 080h) + 4
;
X0673H:
	dec	hl
	ld	e,(hl)
	dec	hl
	ld	d,(hl)
	dec	hl
	ld	a,(hl)
	ld	(0FC2BH),a	; save byte at (-> 80h) + 1
	ld	c,a
	ex	de,hl
	ld	(0FC27H),hl	; save word at (-> 80h) + 2

	ld	b,1
	ld	de,RAMTOP
	call	8006H
	ld	(0FC29H),de	; save DE on exit
	jp	nz,hderr
	ld	de,1010101001010101B
	ld	hl,(RAMTOP+5)	; check data
	or	a
	sbc	hl,de
	jr	z,X06A5H	; -ok-
X069BH:	ld	hl,msg$syserr;	'INVALID SYSTEM TRACKS FOUND'
	ld	e,01AH		; X = 26
	jp	X05DAH
X06A3H:	di
	halt
X06A5H:	ld	a,(RAMTOP+3)
	or	a
	jr	nz,X069BH
	ld	a,(RAMTOP+4)
	or	a
	jr	z,Z80HDBOOT
	ld	b,a
	ld	a,(0FC2BH)
	ld	c,a
	ld	de,(0FC29H)	; recover DE from previous call to 8006H
	ld	hl,(0FC27H)
	inc	h
	call	8006H
	jr	nz,hderr
Z80HDBOOT:				; passed Z80 boot tests
	call	era$row10
	jp	Z80BOOT

hderr:	call	era$row12
	ld	hl,msg$hrderr;	'ERROR READING HARD DISK!!  PRESS RESET TO RETRY'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,012H		; X = 18
	ld	ix,X06DCH
	jp	WTO$16
X06DCH:	di
	halt
	DB	000H
;
	REPT	07FAH-$
	.XLIST
	DB	0FFH
	.LIST
	ENDM
;
SEEKFD:	JP	SEEK	; SEEK PROCESS.
READFD:	JP	FDREAD	; READ PROCESS.
;

	PAGE
;
;------------------------------;
;       INTERRUPT TABLE
;------------------------------;
        DS      800H-$
;
INTTBL: NOP
 	JP 	PWDWN ; POWER DOWN INTR.
 	NOP
 	JP 	SOFT1 ; SOFT TIMER(FIRST)
 	NOP
 	JP 	INTX1 ; EXT. INTR. -1
 	NOP
 	JP 	INTX2 ; EXT. INTR. -2
 	NOP
 	JP 	SIOIR ; 7201 INTR.
 	NOP
 	JP 	CRTIR ; 7220 INTR.
 	NOP
 	JP 	FDCIR ; 765 INTR.
 	NOP
 	NOP
 	NOP
 	NOP
 	NOP
 	JP 	PRNIR ; 8255 INTR.
 	NOP
 	JP 	INTX4 ; EXT. INTR. -4
 	NOP
 	JP 	CLKIR ; 46818 INTR.
 	NOP
 	JP 	INTX5 ; EXT. INTR. -5
 	NOP
 	JP 	INTX6 ; EXT. INTR. -6
 	NOP
 	JP 	SOFT2 ; SOFT TIMER(SLOW)
 	NOP
 	JP 	INTX7 ; EXT. INTR. -7
 	NOP
 	JP 	INTX8 ; EXT. INTR. -8
;
	PAGE

X0840H:	ld	b,00AH
X0842H:	push	bc
	call	wait500
	pop	bc
	djnz	X0842H
	ret

wait500:
	DELAY		; Delay 0.5 Sec. ROUTINE
	ret

wait$fd$rdy:	ld	a,0
	out	(CMOS),a
	call	era$row12
	ld	hl,msg$insert;	'INSERT SYSTEM DISKETTE IN LEFT DRIVE'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,016H		; X = 22
	ld	ix,X086FH
	jp	WTO$16
X086FH:	call	DRDY	;Check Device Ready
	jr	z,X086FH
	ret

era$row10:	ld	hl,msg$blnk
	ld	b,1		; Colour
	ld	d,00AH		; Y = 10
	ld	e,0   		; X = 0
	ld	ix,era$row12
	jp	WTO$16
era$row12:
	ld	hl,msg$blnk
	ld	b,2		; Colour
	ld	d,00CH		; Y = 12
	ld	e,0   		; X = 0
	ld	ix,X0895H
	jp	WTO$16
X0895H:	ld	hl,msg$blnk
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,0   		; X = 0
	ld	ix,X08A5H
	jp	WTO$16
X08A5H:	ret
era$row14:
	ld	hl,msg$blnk
	ld	b,2		; Colour
	ld	d,00EH		; Y = 14
	ld	e,0   		; X = 0 
	ld	ix,X08B6H
	jp	WTO$16
X08B6H:	ld	hl,msg$blnk
	ld	b,4		; Colour
	ld	d,00EH		; Y = 14
	ld	e,0   		; X = 0 
	ld	ix,X08C6H
	jp	WTO$16
X08C6H:	ret


X08C7H:	ld	e,(hl)	; Check MEMORY
	ld	a,e
	cpl
	ld	(hl),a
	ld	a,(hl)
	cpl
	cp	e
	jp	nz,MERR
	ld	(hl),e
	inc	hl
	dec	bc
	ld	a,b
	or	c
	jr	nz,X08C7H
	jp	(ix)

MERR:	ld	a,0
	out	(PROM),a
	ld	hl,msg$ramerr;	'RAM ERROR!! PRESS RESET TO RETRY'
	ld	b,4		; Colour
	ld	d,00CH		; Y = 12
	ld	e,018H		; X = 24
	ld	ix,X08EEH
	jp	WTO$16

X08EEH:	di
	halt

;
;*****************
;* CLEAR DISPLAY *
;*****************
;*
CLRCRT:	EMPTY		    	; CLEAR VRAM.	(MONO)	10/26/82
	LD	A,49H		; CSRW
	OUT	(CRTD),A
	XOR	A
	OUT	(CRTS),A
	OUT	(CRTS),A
	LD	B,4		; VRAM SIZE 128K BYTES. 02/19/83 0301
CLRCRT1:LD	HL,03FFFH	; 32K BYTES.		02/19/83 0301
	LD	A,4CH		; VECTW C.
	OUT	(CRTD),A
	LD	A,2
	OUT	(CRTS),A
	LD	A,L
	OUT	(CRTS),A
	LD	A,H
	OUT	(CRTS),A
	LD	A,4AH		; MASK C
	OUT	(CRTD),A
	LD	A,0FFH
	OUT	(CRTS),A
	OUT	(CRTS),A
	LD	A,20H		; WRITE C.
	OUT	(CRTD),A
 	XOR	A
	OUT	(CRTS),A
	OUT	(CRTS),A
	EMPTY
	DJNZ	CLRCRT1		;			02/19/83 0301
	JP	(IX)		;
;
	PAGE
;
;***** COLOR DISPLAY (COLOR 128KB) ************
;
COLOCLR:			; CLEAR VRAM.
	OUT	(2DH),A		; SET COLOR.
	EMPTY			;
	LD	A,49H		; CSRW.
	OUT	(CRTD),A	;
	XOR	A		;
	OUT	(CRTS),A	; EAD.    L
	OUT	(CRTS),A	;         M
	OUT	(CRTS),A	;	  dAD AND EAD H.
	LD	A,4AH		; MASK W.
	OUT	(CRTD),A	;
	LD	A,0FFH		;
	OUT	(CRTS),A	;
	OUT	(CRTS),A	;
	EMPTY			;
	LD	A,78H		; TEXTW.
	OUT	(CRTD),A	;
	LD	B,8		;
	LD	A,0FFH		;
CLR010:	OUT	(CRTS),A	;
	DJNZ	CLR010		;
	EMPTY			;
	LD	A,4CH		; VECTW.
	OUT	(CRTD),A	;
	LD	A,10H		; P1.
	OUT	(CRTS),A	;
	LD	BC,39		; P2.	  40 COL.		02/19/83 0301
	LD	A,C		;
	OUT	(CRTS),A	;
	LD	A,B		; P3.
	OUT	(CRTS),A	;
	LD	BC,1640		; P4.	1640 LINE.		02/19/83 0301
	LD	A,C		;
	OUT	(CRTS),A	;
	LD	A,B		; P5.
	OUT	(CRTS),A	;
	LD	A,22H		; WRITE.   (CLEAR)
	OUT	(CRTD),A	;
	LD	A,68H		; TEXTE.
	OUT	(CRTD),A	;
	LD	A,49H		; CSRW
	OUT	(CRTD),A	;
	XOR	A		;
	OUT	(CRTS),A	;
	OUT	(CRTS),A	;
	OUT	(CRTS),A	;
	EMPTY			;
	JP	(HL)		; RETURN TO CALLER.
;

	PAGE
; 
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
;
; WTO:    WRITE TO OPERATOR.
;
; B :COLOUR
; D :ROW (0-24)
; E :COL (0-79)
; HL:DISPLAY MESSAGE TERMINATED WITH 00H
;
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
;

WTO$16:	in	a,(018H)	; DIP switch data input
	and	00010000B	; EPSON or IBM crt
	jp	z,WTO
	jp	(ix)
WTO:	in	a,(2CH)	; EPSON CRT
	and	01b		; COLOUR
	jr	nz,WTO$COL	; YES
	ld	a,h
	ex	af,af'
	ld	a,l
	ld	hl,0000H
	ld	b,d
	ld	c,e
	ld	de,0050H
X09BEH:	add	hl,de
	djnz	X09BEH
	add	hl,bc
	ld	b,h
	ld	c,l
	ld	l,a
	ex	af,af'
	ld	h,a
        EMPTY               ; EMPTY CHK
WTO010: LD      A,01001001B ;C   CSRW
        OUT     (CRTD),A
        LD      A,C         ;P1  EAD LOW
        OUT     (CRTS),A
        LD      A,B         ;P2  EAD HIGH
 	OUT     (CRTS),A
        LD      A,01001010B ;C   MASKW
        OUT     (CRTD),A
        LD      A,0FFH      ;P1  MASK LOW
        OUT     (CRTS),A
        LD      A,0FFH      ;P2  MASK HIGH
        OUT     (CRTS),A
        EMPTY               ; EMPTY CHK
        LD      A,00100000B ;C   CODEW MOD=00
        OUT     (CRTD),A
;QX10   LD      A,(HL)       ;P1  CODE LOW
;QX10   OUT     (CRTS),A
;QX10   LD      A,000H       ;P2  CODE HIGH   ATTR.
;QX10   OUT     (CRTS),A
	ld	a,(hl)
	or	a
	jr	z,WTORTN
	out	(CRTS),a
	ld	a,4
	out	(CRTS),a
        INC     BC
        INC     HL
        EMPTY               ; EMPTY CHK
;QX10   DEC     E
;QX10	JP      NZ,WTO010
	JP      WTO010
WTORTN:	JP      (IX)        ; RETURN TO CALLER.
;
WTO$COL:
	ld	a,b
	out	(2DH),a
	push	hl
	ex	de,hl
	call	X0DAAH
X0A12H:	pop	hl
	ld	a,(hl)
	or	a
	jr	z,WTORTN
	inc	hl
	push	hl
	call	X0D71H
	jr	X0A12H

        PAGE
;
;==============================;
; FDD CONTROL SUBROUTINE
;==============================;
;
;------------------------------;
;   FDC READY CHECK
;             A:CHANGED
;------------------------------;
;
CMCHK: 	OUT	(FDMT),A ; MOTOR ON.	;			02/19/83 0301
	IN 	A,(FDDS) ; READ STATUS
 	AND 	CBSY 	 ; CB.BIT CHECK
 	JR 	NZ,CMCHK
 	IN 	A,(FDDS) ; READ AGAIN
 	AND 	NSEEK    ; FDC SEEK CHECK
 	JR 	NZ,CMCHK
 	RET
;
;------------------------------;
; READY CHECK FOR COMMAND WRITE
;             A:CHANGED
;------------------------------;
;
CBUSY: 	IN 	A,(FDDS) ; WAIT FOR WRITE
 	BIT 	RQM,A 	 ; RQM BIT = 1 ?
  	JR 	Z,CBUSY  ; YES WAIT
 	BIT 	DIO,A 	 ; DIO BIT = 0 ?
 	JR 	NZ,CBUSY ; YES WAIT
 	RET
;
;------------------------------;
;  READY CHECK FOR STATUS READ
;             A:CHANGED
;------------------------------;
;
SBUSY: 	IN 	A,(FDDS)
 	BIT 	RQM,A 	; RQM BIT = 1 ?
 	JR 	Z,SBUSY ; YES WAIT  
 	BIT 	DIO,A 	; DIO BIT = 1 ?
 	JR 	Z,SBUSY ; YES WAIT
 	RET
;
;------------------------------;
;   DEVICE READY CHECK
;             A:CHANGED
;------------------------------;
;
DRDY:   CALL    CMCHK
        LD      A,SDS 	  ; SENSE DEVICE STATUS
        OUT     (FDDT),A
        CALL    CBUSY
        LD      A,(DRIVE) ; DIRVE NO. SET
        OUT     (FDDT),A
        CALL    SBUSY
 	IN 	A,(FDDT)  ; READ DEVICE READY ?
 	AND  	READY  	  ; A=0:NOT READY
 	RET

;
;------------------------------;
;      Read Next Sector ID COMMAND
;             USING:DRIVE,
;                   TRACK
;------------------------------;
;
READID:	di
	ld	a,01001010b	; READ ID - MFM Mode, No Skip
	ld	(FDCOM),a
	ld	a,0
	ld	(DRIVE),a
	ld	b,2		; Length of command
	call	COMD	; COMMAND OUT
	ei
RDID1:	ld	a,(FDBSY)
	bit	6,a	; BUSY ?
	jr	nz,RDID1
	ld	a,(ST02)	; STATUS REG.0
	bit	6,a	; COMPLETE ?
	ret	nz
	xor	a
	ret
;
;------------------------------;
;       SEEK COMMAND
;             USING:DRIVE,
;                   TRACK
;                   CALFLG
;------------------------------;
;
SEEK: 	PUSH 	AF
 	PUSH 	BC
 	DI
        LD      A,SEEK0 ; SEEK COMMAND
        LD      (FDCOM),A
        LD      B,3
 	JR 	CALSEK
;
;------------------------------;
;   RECALIBRATION COMMAND
;             USING:DRIVE
;                   CALFLG
;------------------------------;
;
CALBRT: PUSH 	AF
 	PUSH 	BC
 	DI
        LD      A,RECAL ; RECALIBRATE COMMAND
        LD      (FDCOM),A
        LD      B,2
;
CALSEK: CALL    COMD 	   ; COMMAND OUT
 	EI
CLSK2:  LD      A,(FDBSY)
 	BIT 	6,A 	   ; BUSY ?
 	JR 	NZ,CLSK2
        LD      A,(ST02)   ; STATUS REG.0
 	BIT 	6,A 	   ; FUNCTION COMPLEAT ?
 	JR 	NZ,CLSK3
 	XOR 	A
CLSK3:  LD      (CALFLG),A ; FLAG SET
 	POP 	BC
 	POP 	AF
 	RET
;
;------------------------------;
;     COMMAND   OUT     ROUTINE
;             A:CHANGED
;             B:COMAND LENGTH
;             USING:FDCOM--
;                   FDBSY
;------------------------------;
;
COMD:   CALL    DRDY
 	JR 	Z,COMD 	; DEVICE READY ?
        CALL    CMCHK 	; COMMAND EMPTY.  
 	PUSH 	HL
        LD      HL,FDCOM ; COMMAND ADDRESS
CMD00:  CALL    CBUSY
        LD      A,(HL)
        OUT     (FDDT),A ; COMMAND OUT
 	INC 	HL 	; NEXT PARAM.
 	DJNZ 	CMD00 	; B:COMND LENGTH
        LD      HL,FDBSY
 	SET 	6,(HL) 	; BUSY FLAG SET
 	POP 	HL
 	RET
;
;------------------------------;
;     BASIC READ ROUTINE
;             A:CHANGED
;             USING:FDCOM--
;                   FDBSY
;------------------------------;
;
FDREAD: DI
 	PUSH 	HL
 	PUSH 	DE
 	PUSH 	BC
        LD      C,DMMD1 ; BYTE,INC,AUTO,WR,CH0
        LD      B,DMCM1 ; EXTENDED WRITE
        CALL    DMASET 	; DMA MODE SET
        LD      C,RDCMD ; READ COMMAND
; 	JR 	CMDOUT
;
;------------------------------;
;   COMMAND OUTPUT ROUTINE
;             A,B,C:CHANGED
;             USING:FDBSY
;             Z:ABNORMAL
;------------------------------;
;
CMDOUT: LD      A,C
        LD      (FDCOM),A ; R/W/COMMAND SET
        LD      B,9 	  ; 9-BYTE COMMAND
        CALL    COMD 	  ; COMMAND OUT
 	EI
CMM1:   LD      A,(FDBSY) ; BUSY FLAG CHECK
 	BIT 	6,A
 	JR 	NZ,CMM1
        LD      A,(ST02)
 	AND 	0C0H 	  ; ERROR CHECK
 	CP 	40H 	  ; ABNORMAL TERMINATE ?
 	POP 	BC
 	POP 	DE
 	POP 	HL
 	RET
;
	PAGE
;
;------------------------------;
;      DMA PARAMETER SET
;             B:DMA COMMAND
;             C:DMA MODE
;------------------------------;
;
DMASET: PUSH 	AF
 	XOR 	A
        OUT     (DMACL),A ; DMA CLEAR COMMAND
        LD      A,C
        OUT     (DMAMD),A ; DMA MODE SET
        LD      A,(ADDRS) ; START ADDRESS
        OUT     (ADCH0),A ; ADDR. LOW
        LD      A,(ADDRS+1)
        OUT     (ADCH0),A ; ADDR. HIGH
        LD      A,0FFH 	  ; A=FF
        OUT     (CTCH0),A ; BYTE COUNT LOW
        LD      A,(LNGTH) ; 256 BYTE * N
 	DEC 	A
        OUT     (CTCH0),A ; BYTE COUNT HIGH
        LD      A,B 	  ; COMMAND
        OUT     (DMACM),A ; DMA COMMAND SET
        LD      A,DMMSK   ; ..................
        OUT     (DMASK),A ; DMA MASK RESET
 	POP 	AF
 	RET
;
        PAGE
;
;==============================;
;     INTERRUPT PROCEDURE
;==============================;
;
;
;------------------------------;
;    7201(SIO)  INTERRUPT
;             RECEIVE ONLY
;------------------------------;
;
SIOIR: PUSH 	AF
 	IN 	A,(SIAC)   ; READ STATUS
        LD      (KBSTS),A
 	BIT 	0,A 	   ; RX. AVAIL ?
 	JR 	Z,SIOI1    ; NOTHING TO RECEIVE
        LD      A,01H
        OUT     (SIAC),A   ; RR1. SELECT
 	IN 	A,(SIAC)   ; READ STATUS 2
        LD      (KBSTS+1),A
 	IN 	A,(SIAD)   ; READ DATA
        LD      (KBDATA),A ; STORE KB BUFFER
SIOI1:  LD      A,(KBSTS)
 	BIT 	2,A 	   ; TX. EMPTY ?
 	JR 	NZ,SIOI2   ; TX. FULL
        LD      A,28H 	   ; RESET TX. INTR.
        OUT     (SIAC),A
 	XOR 	A
        LD      (KBOBF),A  ; FLAG RESET
SIOI2:  LD      A,30H 	   ; ERROR RESET
        OUT     (SIAC),A   ; 
        LD      A,38H 	   ; END OF INTR.
        OUT     (SIAC),A
        LD      A,OCW2 	   ; NORMAL EOI FOR 8259
        OUT     (ICM0),A
 	POP 	AF
 	EI
 	RETI
;
	PAGE
;
;------------------------------;
;   FDC INTERRUPT PROCEDURE
;------------------------------;
;
FDCIR: 	PUSH 	HL
 	PUSH 	BC
 	PUSH 	AF
;
        LD      A,(FDCOM) ; FDD COMMAND CHECK
 	OR 	A
 	JR 	Z,FDEND
;
 	IN 	A,(FDDS)
 	BIT 	NDM,A
 	JR 	NZ,FDERR
 	BIT 	CB,A
 	JR 	NZ,RWEND
;
;  SEEK/CALIB  END
;
        LD      A,SIS 	  ; SENSE INTR. STATUS
        OUT     (FDDT),A
        CALL    SBUSY
 	IN 	A,(FDDT)  ; STATUS 0 READ
        LD      (ST02),A
        CALL    SBUSY
 	IN 	A,(FDDT)  ; TRACK NO. READ
        LD      (TRAK0),A
        LD      A,(ST02)
 	RLCA
 	JR 	C,FDEND   ; DEV.ATTEN
 	AND 	01000000B
 	JR 	NZ,FDEN1  ; SEEK/RECAL
;
;  ERROR RETURN
;
FDERR:  LD      A,OCW2 	  ; NORMAL EOI
        OUT     (ICM0),A
;
;
;
 	POP 	AF
 	POP 	BC
;QX10 	POP 	BC
 	pop 	hl
 	POP 	HL
        LD      HL,(ERRAD)
 	JP 	(HL)
;
;  READ/WRITE END
;
RWEND: 	XOR 	A
        OUT     (DMACL),A ; DMA DISABLE
 	CPL 		  ; A=FF
        OUT     (DMASK),A ; DMA MASK SET
        LD      B,7
        LD      HL,ST02   ; STATUS TABLE
RWEN1:  CALL    SBUSY 	  ; READ CHECK
 	IN 	A,(FDDT)
        LD      (HL),A 	  ; STATUS STORE
 	INC 	HL
 	DJNZ 	RWEN1 	  ; READ 7 BYTE
;
;
;
FDEN1:  LD      HL,FDBSY
 	RES 	6,(HL)
;
;
;
FDEND:  LD      A,OCW2 	  ; NORMAL EOI
        OUT     (ICM0),A
 	POP 	AF
 	POP 	BC
 	POP 	HL
 	EI
 	RETI
;
	PAGE
;
;------------------------------;
;   NOT USING INTERRUPT
;------------------------------;
;
PWDWN	EQU	$
SOFT1	EQU	$
SOFT2	EQU	$
INTX1	EQU	$
INTX2	EQU	$
INTX4	EQU	$
INTX5	EQU	$
INTX6	EQU	$
INTX7	EQU	$
INTX8	EQU	$
CRTIR	EQU	$
CLKIR	EQU	$
PRNIR	EQU	$
	HALT
;
;
msg$insert:
	DB	'INSERT SYSTEM DISKETTE IN LEFT DRIVE',0
msg$no16:
	DB	'16 BIT CARD NOT INSTALLED! UNABLE TO BOOT SYSTEM',0
msg$hrderr:
	DB	'ERROR READING HARD DISK!!  PRESS RESET TO RETRY',0
msg$ram:
	DB	'TESTING RAM',0
msg$z80:
	DB	'Z80 PROCESSOR CHIP FAILED! PRESS RESET TO RETRY',0
msg$ramerr:
	DB	'RAM ERROR!! PRESS RESET TO RETRY',0
msg$ipl:
	DB	'IPL VERSION 3.0A',0
msg$nohrd:
	DB	'HARD DISK NOT RESPONDING',0
msg$hdperr:
	DB	'ERROR READING THE HARD DISK PARTITION TABLE',0
msg$prterr:
	DB	'INVALID PARTITION TABLE FOUND',0
msg$syserr:
	DB	'INVALID SYSTEM TRACKS FOUND',0
msg$blnk:	;1234567890123456789012345678901234567890
	DB	'                                        '
	DB	'                                        ',0
	DB	'*',0
DMA:	DB	000H

X0D71H:	ld	hl,X0E54H
	ld	de,0FE00H
	ld	bc,0023H
	ldir
	sub	020H;' '
	ld	(0FD00H),a
	ld	hl,0FD00H
	xor	a
	rld
	ld	d,a
	ld	e,(hl)
	ld	hl,X0E77H
	add	hl,de
	ld	bc,8
	ld	de,0FE03H
	ldir
	ld	bc,8
	ld	de,0FE14H
	ldir
	ld	hl,0FE00H
	call	X0DE7H
	ld	hl,0FD01H
	inc	(hl)
	jp	X0DADH
X0DAAH:	ld	(0FD01H),hl
X0DADH:	ld	hl,X0E4EH
	ld	de,0FE00H
	ld	bc,6
	ldir
	ld	hl,(0FD01H)
	ld	de,X0E1CH
	ld	a,l
	srl	a
	ld	(0FD03H),a
	ld	a,080H
	jr	c,X0DCAH
	ld	a,0
X0DCAH:	ld	(0FE05H),a
	ld	a,(0FD03H)
	ld	l,h
	ld	h,0
	add	hl,hl
	add	hl,de
	add	a,(hl)
	ld	e,a
	inc	hl
	ld	a,(hl)
	adc	a,0
	ld	d,a
	ld	l,e
	ld	h,d
	ld	(0FE03H),hl
	ld	hl,0FE00H
	jp	X0DE7H
X0DE7H:	ld	b,(hl)
	inc	hl
X0DE9H:	push	bc
	ld	a,(hl)
	call	X0E04H
	inc	hl
	ld	a,0
	cp	(hl)
	jr	z,X0E01H
	ld	b,(hl)
	ld	c,038H;'8'
	inc	hl
	call	X0E14H
	otir
X0DFDH:	pop	bc
	djnz	X0DE9H
	ret
X0E01H:	inc	hl
	jr	X0DFDH
X0E04H:	call	X0E0AH
	out	(CRTD),a
	ret
X0E0AH:	push	af
X0E0BH:	in	a,(CRTS)
	and	2
	jp	nz,X0E0BH
	pop	af
	ret
X0E14H:	in	a,(CRTS)
	and	4
	jp	z,X0E14H
	ret
X0E1CH:	DB	058H;'X'
	DB	002H
	DB	0D8H
	DB	004H
	DB	058H;'X'
	DB	007H
	DB	0D8H
	DB	009H
	DB	058H;'X'
	DB	00CH
	DB	0D8H
	DB	00EH
	DB	058H;'X'
	DB	011H
	DB	0D8H
	DB	013H
	DB	058H;'X'
	DB	016H
	DB	0D8H
	DB	018H
	DB	058H;'X'
	DB	01BH
	DB	0D8H
	DB	01DH
	DB	058H;'X'
	DB	020H;' '
	DB	0D8H
	DB	022H;'"'
	DB	058H;'X'
	DB	025H;'%'
	DB	0D8H
	DB	027H;'''
	DB	058H;'X'
	DB	02AH;'*'
	DB	0D8H
	DB	02CH;','
	DB	058H;'X'
	DB	02FH;'/'
	DB	0D8H
	DB	031H;'1'
	DB	058H;'X'
	DB	034H;'4'
	DB	0D8H
	DB	036H;'6'
	DB	058H;'X'
	DB	039H;'9'
	DB	0D8H
	DB	03BH;';'
	DB	058H;'X'
	DB	03EH;'>'
X0E4EH:	DB	001H
	DB	049H;'I'
	DB	003H
	DS	0003H
X0E54H:	DB	006H
	DB	078H;'x'
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	04CH;'L'
	DB	003H
	DB	012H
	DB	007H
	DB	000H
	DB	068H;'h'
	DB	000H
	DB	078H;'x'
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	04CH;'L'
	DB	003H
	DB	012H
	DB	007H
	DB	000H
	DB	068H;'h'
	DB	000H
X0E77H:	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	000H
	DB	000H
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	036H;'6'
	DB	012H
	DB	012H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	024H;'$'
	DB	024H;'$'
	DB	024H;'$'
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	024H;'$'
	DB	024H;'$'
	DB	024H;'$'
	DB	07EH;'~'
	DB	024H;'$'
	DB	024H;'$'
	DB	07EH;'~'
	DB	048H;'H'
	DB	049H;'I'
	DB	03EH;'>'
	DB	008H
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	008H
	DB	03EH;'>'
	DB	049H;'I'
	DB	009H
	DB	009H
	DB	03EH;'>'
	DB	048H;'H'
	DB	064H;'d'
	DB	094H
	DB	092H
	DB	062H;'b'
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	046H;'F'
	DB	049H;'I'
	DB	029H;')'
	DB	026H;'&'
	DB	010H
	DB	010H
	DB	008H
	DB	008H
	DB	051H;'Q'
	DB	021H
	DB	052H;'R'
	DB	00CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	00CH
	DB	012H
	DB	012H
	DB	00AH
	DB	004H
	DB	006H
	DB	006H
	DB	049H;'I'
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	018H
	DB	018H
	DB	010H
	DB	008H
	DB	004H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	008H
	DB	010H
	DB	020H;' '
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	020H;' '
	DB	010H
	DB	008H
	DB	008H
	DB	004H
	DB	004H
	DB	004H
	DB	004H
	DB	008H
	DB	008H
	DB	004H
	DB	002H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	002H
	DB	004H
	DB	008H
	DB	008H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	02AH;'*'
	DB	049H;'I'
	DB	008H
	DS	0004H
X0F1EH:	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	049H;'I'
	DB	02AH;'*'
	DB	01CH
	DB	008H
	DB	01CH
	DB	008H
	DB	008H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	008H
	DB	008H
	DB	07FH
	DB	008H
	DB	00CH
	DB	00CH
	DB	008H
	DB	004H
	DB	002H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	03EH;'>'
	DB	000H
	DB	000H
	DB	000H
	DB	00CH
	DB	00CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	004H
	DB	002H
	DB	002H
	DB	001H
	DB	001H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	020H;' '
	DB	020H;' '
	DB	010H
	DB	010H
	DB	008H
	DB	008H
	DB	004H
	DB	045H;'E'
	DB	043H;'C'
	DB	022H;'"'
	DB	01CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	01CH
	DB	022H;'"'
	DB	061H;'a'
	DB	051H;'Q'
	DB	051H;'Q'
	DB	049H;'I'
	DB	049H;'I'
	DB	045H;'E'
	DB	008H
	DB	008H
	DB	008H
	DB	03EH;'>'
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	008H
	DB	00CH
	DB	00AH
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	008H
	DB	004H
	DB	002H
	DB	001H
	DB	07FH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	01CH
	DB	022H;'"'
	DB	041H;'A'
	DB	041H;'A'
	DB	040H;'@'
	DB	020H;' '
	DB	010H
	DB	008H
	DB	040H;'@'
	DB	041H;'A'
	DB	022H;'"'
	DB	01CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	01CH
	DB	022H;'"'
	DB	041H;'A'
	DB	040H;'@'
	DB	020H;' '
	DB	01CH
	DB	020H;' '
	DB	040H;'@'
	DB	07FH
	DB	020H;' '
	DB	020H;' '
	DB	020H;' '
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	030H;'0'
	DB	028H;'('
	DB	028H;'('
	DB	024H;'$'
	DB	024H;'$'
	DB	022H;'"'
	DB	022H;'"'
	DB	021H
	DB	040H;'@'
	DB	041H;'A'
	DB	022H;'"'
	DB	01CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	07FH
	DB	001H
	DB	001H
	DB	001H
	DB	01DH
	DB	023H;'#'
	DB	040H;'@'
	DB	040H;'@'
	DB	041H;'A'
	DB	041H;'A'
	DB	022H;'"'
	DB	01CH
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	010H
	DB	008H
	DB	004H
	DB	002H
	DB	002H
	DB	01DH
	DB	023H;'#'
	DB	041H;'A'
	DB	004H
	DB	004H
	DB	002H
	DB	002H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	07FH
	DB	041H;'A'
	DB	020H;' '
	DB	020H;' '
	DB	010H
	DB	010H
	DB	008H
	DB	008H
	DB	041H;'A'
	DB	041H;'A'
	DB	022H;'"'
	DB	01CH
	DS	0004H
X0FFFH:	DB	01CH
X1000H:	DB	082H

	ds	01C77H-$
	PAGE
;
; SIO COMMAND TABLE
;
SIOTBL: DB 	18H 	; CHANNEL RESET
 	DB 	14H 	; WR4. RESET EX/SP INT
 	DB 	37H 	; X1,ASYNC,1STOP,ENEN
 	DB 	03H 	; WR3.
 	DB 	0E1H 	; 8BIT,AUTO,RXENB
 	DB 	05H 	; WR5.
 	DB 	0EAH 	; DTR,RTS=1,8BIT,TXENB
 	DB 	02H 	; WR2.
 	DB 	00H 	; NON VECT 85
 	DB 	01H 	; WR1.
 	DB 	10H 	; ALL RX.INT,AFFECT
;
;* MONO SYNC. PARAM.
;
MONODSP:DB      00010100B ;P1  00CFIDGS
        DB      78        ;P2  <--C/R->
        DB      00000010B ;P3  VSL<-HS>
        DB      00011010B ;P4  <HFP>VSH    10/09/82
        DB      00010010B ;P5  00<-HBP>!!! 10/09/82
        DB      00000001B ;P6  00<-VFP>
        DB      144       ;P7  <--L/F->
        DB      00010001B ;P8  <-VBP>LF
;
;* COLOR SYNC. PARAM.
;
COLODSP:DB	06H	; P1.   00CFIDGS
	DB	38	; P2.	<--C/R-->
	DB	23H	; P3,	VSL <-HS>
	DB	11H	; P4.	<HFP>VSH
	DB	04H	; P5.	00<-HBP>
	DB	07H	; P6.	00<-VFP>
	DB	144	; P7.	<--L/F-->
	DB	65H	; P8.	<-VBP>LF
;
;
;
PATCH:	DB	0E8H,0E4H,0C9H,0C3H	; PATCH AREA.
	DB	0C8H,0C9H,040H,0E4H	;   *    *
	DB	0E2H,0C8H,0C9H,0E8H	;   *    *
	DB	0C1H,0D4H,0C1H,040H	;   *    *

	ds	01CA2H-$
X1CA2H	EQU	$
	ds	02000h-$
len$ipl	EQU	$-START	; length of IPL ROM

        PAGE
;
;==============================;
;         LAVEL TABLE
;==============================;
;
;
;****** MEMORY BANK SW. ******
;
MB1     EQU     10H
MB2     EQU     20H
MB3     EQU     40H
MB4     EQU     80H
;
;****** TIMER / COUNTER ******
;
C0M1	EQU	00110010B ; MODE 1
C0M3    EQU     00110110B ; 8253 MODE
C1M3    EQU     01110110B ; MODE 3
C2M3    EQU     10110110B
;
;***** INTERRUPT CONTROLER *****
;
ICW1    EQU     10010101B ; A=780,EDGE,4BYTE,MULTI
ICW2    EQU     07H 	  ; ADDR. HIGH
ICW3    EQU     10000000B ; IR7. = SLV
ICW4    EQU     00000010B ; AEOI,Z80
ICW5    EQU     10110101B ; A=7C0,EDGE,4BYTE,MULTI
ICW6    EQU     07H 	  ; ADDR. HIGH
ICW7    EQU     00000111B ; SLAVE ID=7
ICW8    EQU     00000010B ; AEOI,Z80
OCW2    EQU     20H 	  ; NORMAL EOI
;
;******* FDD CONTROLER *******
;
SPCFY   EQU     03H 	  ; FDD SPECIFY COMMAND
;QX10	SPCF1   EQU     8FH 	  ; SRT=15M,HUT=MAX
SPCF1   EQU     0DFH 	  ; SRT=??M,HUT=MAX
SPCF2   EQU     12H 	  ; HLD=35M
SDS     EQU     04H 	  ; SENSE DEVICE STATUS
SIS     EQU     08H 	  ; SENSE INTRRUPT STATUS
RECAL   EQU     07H 	  ; RECALIBRATE COMMAND
SEEK0   EQU     0FH 	  ; SEEK COMMAND
RDCMD   EQU     46H 	  ; READ COMMAND
WRCMD   EQU     45H 	  ; WRITE COMMAND
CBSY    EQU     00010000B ; FDC BUSY FLAG
NSEEK   EQU     00001111B ; IN SEEK FLAG
READY   EQU     00100000B ; READY BIT
RQM     EQU     7 	  ; REQUEST FOR MASTER
DIO     EQU     6 	  ; DATA IN/OUT
NDM     EQU     5 	  ; NON DMA MODE
CB      EQU     4 	  ; FDC BUSY FLAG
;
	PAGE
;
;******* DMA CONTROLER ********
;
DMMSK   EQU     00001110B ; CH1-3 MASK
DMMD1   EQU     01000100B ; BYTE,INC,WR,CH0
DMMD2   EQU     01001000B ; BYTE,INC,RD,CH0
DMCM1   EQU     01100000B ; DRQ,DAK:NEG,EXT.WRT
DMCM2   EQU     01100000B ;
;
;******** CLOCK COMMAND ********
;
CINI1   EQU     0A2EH 	  ; REG.A:2E
CINI2   EQU     0B0EH 	  ; REG.B:0E
CINI3   EQU     0D80H 	  ; REG.D:80
;
;******* PRINTER COMMAND *******
;
PIMD1   EQU     10100010B ; A:OUT,B:IN,C4-5:OUT
PIEN    EQU     00001101B ; BIT6=1
;
;************ OTHER ************
;
CRTBUF  EQU     0FD00H
;
;
        PAGE
;
;  I/O PORT ADDRESS MAP
;
CTC1    EQU     00H ; 8253 -1 CH.0
CTC2    EQU     04H ; 8253 -2 CH.0
ICM0    EQU     08H ; 8259 NO.1
ICM1    EQU     09H
ICS0    EQU     0CH ; 8259 NO.2
ICS1    EQU     0DH
SIAD    EQU     10H ; 7201 A.DATA
SIBD    EQU     11H ;      B,DATA
SIAC    EQU     12H ;      A,CMND
SIBC    EQU     13H ;      B,CMND
PIOA    EQU     14H ; 8255 A.DATA
PIOB    EQU     15H ;      B.STATUS
PIOM    EQU     17H ;      COMMAND
MBRG    EQU     18H ; MEM.BANK REG.
PROM    EQU     1CH ; PROM. DISABL
CMOS    EQU     20H ; CMOS. SELECT
CPU16	EQU	24H ; 8088 CPU SELECT
FDMT    EQU     30H ; FDD. MT. CTRL
FDDS    EQU     34H ; FDC. STATUS
FDDT    EQU     35H ;      DATA
CRTS    EQU     38H ; CRT. STATUS
CRTD    EQU     39H ;      DATA
CRTZ    EQU     3AH ;      ZOOM
CLKD    EQU     3CH ; CLOCK DATA
CLKA    EQU     3DH ; CLOCK ADDR
DMACM   EQU     48H ; DMA COMMAND REG
DMARQ   EQU     49H ;     REQUEST S/R
DMAMD   EQU     4BH ;     MODE REG
DMACL   EQU     4DH ;     MASTER RESET
DMASK   EQU     4FH ;     MASK REG
ADCH0   EQU     40H ;     CH0 ADDR.
CTCH0   EQU     41H ;     CH0 COUNT
;
;
;
;
;
        PAGE
;
;==============================;
;                              ;
;       COMMON RAM AREA        ;
;                              ;
;==============================;
;
RAMTOP  EQU     0F000H ; RAM TOP ADDR.
;------------------------------;
;   LOADER AREA (F000H-FBFFH)  ;
;------------------------------;
;
;;;; 0FC00H ; COMMON TABLE AREA
;
FDCOM   EQU     0FC00H  ;1 ; FDD COMMAND
DRIVE   EQU     0FC01H  ;1 ; DRIVE NO.
TRACK   EQU     0FC02H  ;1 ; TRACK NO.
HEAD1   EQU     0FC03H  ;1 ; HEAD SELECT
SECTR   EQU     0FC04H  ;1 ; SECTOR NO.
FDPRM   EQU     0FC05H  ;4 ; COMMON PARAMETER
LNGTH   EQU     0FC09H  ;1 ; SECTOR LENGTH
ADDRS   EQU     0FC0AH  ;2 ; RAM ADDRESS.
;
ST02    EQU     0FC0CH  ;3 ; RESULT STATUS
TRAK0   EQU     0FC0FH  ;1 ; STATUS TRACK
HEAD0   EQU     0FC10H  ;1 ; STATUS HEAD
SECT0   EQU     0FC11H  ;1 ; STATUS SECTOR
LNGH0   EQU     0FC12H  ;1 ; STATUS N
;
FDBSY   EQU     0FC13H  ;1 ; FDD COMND EXEC FLAG
CALFLG  EQU     0FC14H  ;1 ; CALIB FLAG
IMASK   EQU     0FC15H  ;1 ; INTRRUPT MASK
KBSTS   EQU     0FC16H  ;2 ; KEY STATUS
KBDATA  EQU     0FC18H  ;1 ; KEY DATA
KBOBF   EQU     0FC19H  ;1 ; TX.BUFF BUSY
KBPOIN  EQU     0FC1AH  ;1
KBFULL  EQU     0FC1BH  ;1
BZBUF   EQU     0FC1CH  ;1
MBRBUF  EQU     0FC1DH  ;1
TDRIV   EQU     0FC1EH  ;1
PRNFLG  EQU     0FC1FH  ;1
PRNBUF  EQU     0FC20H  ;1
ERRAD   EQU     0FC21H  ;2 ; JUMP FOR ERROR
CLRDT   EQU     0FC23H  ;2
CHARDT  EQU     0FC25H  ;1
ATTRDT  EQU     0FC26H  ;1
;
XF1BEH	EQU	0F1BEH
XF1FEH	EQU	0F1FEH
XFBFBH	EQU	0FBFBH
XFC27H	EQU	0FC27H
XFC29H	EQU	0FC29H
XFC2BH	EQU	0FC2BH
XFD00H	EQU	0FD00H
XFD01H	EQU	0FD01H
XFD03H	EQU	0FD03H
XFE00H	EQU	0FE00H
XFE03H	EQU	0FE03H
XFE05H	EQU	0FE05H
XFE14H	EQU	0FE14H
XFFFEH	EQU	0FFFEH
XFFFFH	EQU	0FFFFH

	END

; remainder from QX10 IPL ----------------------------------------
ENDDIAG:
        LD      SP,0        ; SET INITIAL STACK POINTER.
	LD	BC,80*12+33  ; BC = DISPLAY ADDRESS.
        LD      HL,MSG1      ; NORMAL END MESSAGE.
	LD	E,(HL)	     ; E = DISPLAY LENGTH.
	INC	HL	     ;	
        LD      IX,FDCINT    ; SET RETURN ADDRESS.      
        JP      WTO	     ; DISPLAY 'INSERT DISKKET'
        PAGE
;
;
;****** MEMORY ERROR *********
;*
MERR:   LD      HL,MSG3      ; DISPLAY MEMORY ERROR MESSAGE.
        LD      IX,MERR1     ; SET RETURN ADDRESS.
        JR      DSPMSG       ; DISPLAY ERROR MESSAGE.
MERR1:  LD      A,014H       ;
        OUT     (MBRG),A     ; BUZZER ON.
        DELAY                ; 1 SEC.
        LD      A,010H       ;
        OUT     (MBRG),A     ; BUZZER OFF.
        DELAY                ; 1 SEC.
        JR      MERR1        ; GOOD BYE !
;
	PAGE
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;      BASIC SUBROUTINES       ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;************** DISPLAY MESSAGE **************
;
DSPMSG:
        LD      E,(HL)      ; E = MESSAGE LENGTH.
        INC     HL          ; HL = MESSAGE TOP ADDRESS. 
        LD      BC,0 
        JP      WTO	    ; EXEC DISPLAY AND RETURN TO CALLER.
        PAGE
;*
;**  MESSAGE DEFINE ***************************************
;*
MSG1:   DB      MSG2-MSG1-1
        DB      'INSERT DISKETTE'	; 10/26/82
;
MSG2:   DB      MSG3-MSG2-1
        DB      'DIAGNOSTIC CODE  0001'
	DB	'           0.06'	;		02/19/83 0301
;
MSG3:   DB      MSG4-MSG3-1
        DB      'DIAGNOSTIC CODE  0002'
	DB	'           0.06'	;		02/19/83 0301
;
MSG4:	DB	MSG5-MSG4-1		; 10/26/82
	DB	'               '	; 10/26/82
MSG5:					; 10/26/82
;
DMA:	DB	0	; DMA RESET DATA.
;
	REPT	780H-$
	.XLIST
	DB	0FFH
	.LIST
	ENDM
;
